---
openapi: 3.1.0
info:
  title: Core
  version: "4"
servers:
  - url: https://api.doppler.com/
components:
  securitySchemes:
    sec0:
      type: oauth2
      flows: {}
security:
  - sec0: []
paths:
  "/v3/projects":
    get:
      summary: List
      description: Projects
      operationId: projects-list
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "page": 1,
                      "projects": [
                        {
                          "id": "ed0c2a68b6",
                          "slug": "compression",
                          "name": "Compression",
                          "description": "Super rad middle-out compression algo.",
                          "created_at": "2019-03-26T03:16:20.233Z"
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 1
                    default: 0
                  projects:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: ed0c2a68b6
                        slug:
                          type: string
                          example: compression
                        name:
                          type: string
                          example: Compression
                        description:
                          type: string
                          example: Super rad middle-out compression algo.
                        created_at:
                          type: string
                          example: "2019-03-26T03:16:20.233Z"
      deprecated: false
    post:
      summary: Create
      description: Project
      operationId: projects-create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Name of project
                  default: PROJECT_NAME
                description:
                  type: string
                  description: Description of project
                  default: PROJECT_DESCRIPTION
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "project": {
                        "id": "ed0c2a68b6",
                        "name": "Compression",
                        "description": "Super rad middle-out compression algo.",
                        "created_at": "2019-03-26T03:16:20.233Z"
                      }
                    }
              schema:
                type: object
                properties:
                  project:
                    type: object
                    properties:
                      id:
                        type: string
                        example: ed0c2a68b6
                      name:
                        type: string
                        example: Compression
                      description:
                        type: string
                        example: Super rad middle-out compression algo.
                      created_at:
                        type: string
                        example: "2019-03-26T03:16:20.233Z"
      deprecated: false
  "/v3/environments":
    get:
      summary: List
      description: Environments
      operationId: environments-list
      parameters:
        - name: project
          in: query
          description: The project's name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "environments": [
                        {
                          "id": "dev",
                          "name": "Development",
                          "initial_fetch_at": "2019-11-21T03:45:47.982Z",
                          "created_at": "2019-11-19T07:19:00.476Z",
                          "project": "ed0c2a68b6"
                        },
                        {
                          "id": "stg",
                          "name": "Staging",
                          "initial_fetch_at": null,
                          "created_at": "2019-11-19T07:19:00.484Z",
                          "project": "ed0c2a68b6"
                        },
                        {
                          "id": "prd",
                          "name": "Production",
                          "initial_fetch_at": null,
                          "created_at": "2019-11-19T07:19:00.492Z",
                          "project": "ed0c2a68b6"
                        }
                      ],
                      "page": 1
                    }
              schema:
                type: object
                properties:
                  environments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: dev
                        name:
                          type: string
                          example: Development
                        initial_fetch_at:
                          type: string
                          example: "2019-11-21T03:45:47.982Z"
                        created_at:
                          type: string
                          example: "2019-11-19T07:19:00.476Z"
                        project:
                          type: string
                          example: ed0c2a68b6
                  page:
                    type: integer
                    example: 1
                    default: 0
      deprecated: false
    post:
      summary: Create
      description: Environment
      operationId: environments-create
      parameters:
        - name: project
          in: query
          description: The project's name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - slug
              properties:
                name:
                  type: string
                slug:
                  type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "environment": {
                        "id": "dev",
                        "name": "Development",
                        "initial_fetch_at": "2019-11-21T03:45:47.982Z",
                        "created_at": "2019-11-19T07:19:00.476Z",
                        "project": "ed0c2a68b6"
                      }
                    }
              schema:
                type: object
                properties:
                  environment:
                    type: object
                    properties:
                      id:
                        type: string
                        example: dev
                      name:
                        type: string
                        example: Development
                      initial_fetch_at:
                        type: string
                        example: "2019-11-21T03:45:47.982Z"
                      created_at:
                        type: string
                        example: "2019-11-19T07:19:00.476Z"
                      project:
                        type: string
                        example: ed0c2a68b6
      deprecated: false
  "/v3/projects/project":
    get:
      summary: Retrieve
      description: Project
      operationId: projects-get
      parameters:
        - name: project
          in: query
          description: Unique identifier for the project object.
          required: true
          schema:
            type: string
            default: PROJECT_NAME
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "project": {
                        "id": "ed0c2a68b6",
                        "name": "Compression",
                        "description": "Super rad middle-out compression algo.",
                        "created_at": "2019-03-26T03:16:20.233Z"
                      }
                    }
              schema:
                type: object
                properties:
                  project:
                    type: object
                    properties:
                      id:
                        type: string
                        example: ed0c2a68b6
                      name:
                        type: string
                        example: Compression
                      description:
                        type: string
                        example: Super rad middle-out compression algo.
                      created_at:
                        type: string
                        example: "2019-03-26T03:16:20.233Z"
      deprecated: false
    delete:
      summary: Delete
      description: Project
      operationId: projects-delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - project
              properties:
                project:
                  type: string
                  description: Unique identifier for the project object.
                  default: PROJECT_NAME
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      success: true
                    }
      deprecated: false
    post:
      summary: Update
      description: Project
      operationId: projects-update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - project
                - name
              properties:
                project:
                  type: string
                  description: Unique identifier for the project object.
                  default: PROJECT_NAME
                name:
                  type: string
                  description: Name of the project.
                  default: PROJECT_NEW_NAME
                description:
                  type: string
                  description: Description of the project.
                  default: PROJECT_DESCRIPTION
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "project": {
                        "id": "ed0c2a68b6",
                        "name": "Compression",
                        "description": "Super rad middle-out compression algo.",
                        "created_at": "2019-03-26T03:16:20.233Z"
                      }
                    }
              schema:
                type: object
                properties:
                  project:
                    type: object
                    properties:
                      id:
                        type: string
                        example: ed0c2a68b6
                      name:
                        type: string
                        example: Compression
                      description:
                        type: string
                        example: Super rad middle-out compression algo.
                      created_at:
                        type: string
                        example: "2019-03-26T03:16:20.233Z"
      deprecated: false
  "/v3/configs/config":
    post:
      summary: Update
      description: Modify an existing config.
      operationId: configs-update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - project
                - config
                - name
              properties:
                project:
                  type: string
                  description: Unique identifier for the project object.
                  default: PROJECT_NAME
                config:
                  type: string
                  description: Name of the config object.
                  default: CONFIG_NAME
                name:
                  type: string
                  description: The new name of config.
                  default: CONFIG_NEW_NAME
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "config": {
                        "name": "prd_gcp",
                        "root": false,
                        "locked": false,
                        "initial_fetch_at": "2019-11-19T07:32:12.000Z",
                        "last_fetch_at": "2019-11-19T07:36:10.980Z",
                        "created_at": "2019-11-19T07:19:00.480Z",
                        "environment": "prd",
                        "project": "ed0c2a68b6"
                      }
                    }
              schema:
                type: object
                properties:
                  config:
                    type: object
                    properties:
                      name:
                        type: string
                        example: prd_gcp
                      root:
                        type: boolean
                        example: false
                        default: true
                      locked:
                        type: boolean
                        example: false
                        default: true
                      initial_fetch_at:
                        type: string
                        example: "2019-11-19T07:32:12.000Z"
                      last_fetch_at:
                        type: string
                        example: "2019-11-19T07:36:10.980Z"
                      created_at:
                        type: string
                        example: "2019-11-19T07:19:00.480Z"
                      environment:
                        type: string
                        example: prd
                      project:
                        type: string
                        example: ed0c2a68b6
      deprecated: false
    get:
      summary: Retrieve
      description: Fetch a config's details.
      operationId: configs-get
      parameters:
        - name: project
          in: query
          description: Unique identifier for the project object.
          required: true
          schema:
            type: string
            default: PROJECT_NAME
        - name: config
          in: query
          description: Name of the config object.
          required: true
          schema:
            type: string
            default: CONFIG_NAME
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "config": {
                        "name": "prd_aws",
                        "root": false,
                        "locked": false,
                        "initial_fetch_at": "2019-11-19T07:32:12.000Z",
                        "last_fetch_at": "2019-11-19T07:36:10.980Z",
                        "created_at": "2019-11-19T07:19:00.480Z",
                        "environment": "prd",
                        "project": "ed0c2a68b6"
                      }
                    }
              schema:
                type: object
                properties:
                  config:
                    type: object
                    properties:
                      name:
                        type: string
                        example: prd_aws
                      root:
                        type: boolean
                        example: false
                        default: true
                      locked:
                        type: boolean
                        example: false
                        default: true
                      initial_fetch_at:
                        type: string
                        example: "2019-11-19T07:32:12.000Z"
                      last_fetch_at:
                        type: string
                        example: "2019-11-19T07:36:10.980Z"
                      created_at:
                        type: string
                        example: "2019-11-19T07:19:00.480Z"
                      environment:
                        type: string
                        example: prd
                      project:
                        type: string
                        example: ed0c2a68b6
      deprecated: false
    delete:
      summary: Delete
      description: Permanently delete the config.
      operationId: configs-delete
      parameters:
        - name: project
          in: query
          description: Unique identifier for the project.
          required: true
          schema:
            type: string
        - name: config
          in: query
          description: Name of the config.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "success": true
                    }
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                    default: true
      deprecated: false
  "/v3/environments/environment":
    get:
      summary: Retrieve
      description: Environment
      operationId: environments-get
      parameters:
        - name: project
          in: query
          description: The project's name
          required: true
          schema:
            type: string
        - name: environment
          in: query
          description: The environment's slug
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "environment": {
                        "id": "dev",
                        "name": "Development",
                        "initial_fetch_at": "2019-11-21T03:45:47.982Z",
                        "created_at": "2019-11-19T07:19:00.476Z",
                        "project": "ed0c2a68b6"
                      }
                    }
              schema:
                type: object
                properties:
                  environment:
                    type: object
                    properties:
                      id:
                        type: string
                        example: dev
                      name:
                        type: string
                        example: Development
                      initial_fetch_at:
                        type: string
                        example: "2019-11-21T03:45:47.982Z"
                      created_at:
                        type: string
                        example: "2019-11-19T07:19:00.476Z"
                      project:
                        type: string
                        example: ed0c2a68b6
      deprecated: false
    delete:
      summary: Delete
      description: Environment
      operationId: environments-delete
      parameters:
        - name: project
          in: query
          description: The project's name
          required: true
          schema:
            type: string
        - name: environment
          in: query
          description: The environment's slug
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      success: true
                    }
      deprecated: false
    put:
      summary: Rename
      description: Environment
      operationId: environments-rename
      parameters:
        - name: project
          in: query
          description: The project's name
          required: true
          schema:
            type: string
        - name: environment
          in: query
          description: The environment's slug
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Desired name
                slug:
                  type: string
                  description: Desired slug
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "environment": {
                        "id": "dev",
                        "name": "Development",
                        "initial_fetch_at": "2019-11-21T03:45:47.982Z",
                        "created_at": "2019-11-19T07:19:00.476Z",
                        "project": "ed0c2a68b6"
                      }
                    }
              schema:
                type: object
                properties:
                  environment:
                    type: object
                    properties:
                      id:
                        type: string
                        example: dev
                      name:
                        type: string
                        example: Development
                      initial_fetch_at:
                        type: string
                        example: "2019-11-21T03:45:47.982Z"
                      created_at:
                        type: string
                        example: "2019-11-19T07:19:00.476Z"
                      project:
                        type: string
                        example: ed0c2a68b6
      deprecated: false
  "/v3/configs":
    get:
      summary: List
      description: Fetch all configs.
      operationId: configs-list
      parameters:
        - name: project
          in: query
          description: The project's name
          required: true
          schema:
            type: string
        - name: environment
          in: query
          description: "(optional) the environment from which to list configs"
          schema:
            type: string
            default: Environment slug
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "page": 1,
                      "configs": [
                        {
                          "name": "dev",
                          "root": true,
                          "locked": true,
                          "initial_fetch_at": "2019-11-19T07:36:12.000Z",
                          "last_fetch_at": "2019-11-19T07:32:10.980Z",
                          "created_at": "2019-11-19T07:19:00.480Z",
                          "environment": "dev",
                          "project": "ed0c2a68b6"
                        },
                        {
                          "name": "stg",
                          "root": true,
                          "locked": true,
                          "initial_fetch_at": null,
                          "last_fetch_at": null,
                          "created_at": "2019-11-19T07:19:00.488Z",
                          "environment": "stg",
                          "project": "ed0c2a68b6"
                        },
                        {
                          "name": "prd",
                          "root": true,
                          "locked": true,
                          "initial_fetch_at": null,
                          "last_fetch_at": null,
                          "created_at": "2019-11-19T07:19:00.495Z",
                          "environment": "prd",
                          "project": "ed0c2a68b6"
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 1
                    default: 0
                  configs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: dev
                        root:
                          type: boolean
                          example: true
                          default: true
                        locked:
                          type: boolean
                          example: true
                          default: true
                        initial_fetch_at:
                          type: string
                          example: "2019-11-19T07:36:12.000Z"
                        last_fetch_at:
                          type: string
                          example: "2019-11-19T07:32:10.980Z"
                        created_at:
                          type: string
                          example: "2019-11-19T07:19:00.480Z"
                        environment:
                          type: string
                          example: dev
                        project:
                          type: string
                          example: ed0c2a68b6
      deprecated: false
    post:
      summary: Create
      description: Create a new branch config.
      operationId: configs-create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - project
                - environment
                - name
              properties:
                project:
                  type: string
                  description: Unique identifier for the project object.
                  default: PROJECT_NAME
                environment:
                  type: string
                  description: Identifier for the environment object.
                  default: ENVIRONMENT_ID
                name:
                  type: string
                  description: Name of the new branch config.
                  default: CONFIG_NAME
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "config": {
                        "name": "prd_aws",
                        "root": false,
                        "locked": false,
                        "initial_fetch_at": "2019-11-19T07:32:12.000Z",
                        "last_fetch_at": "2019-11-19T07:36:10.980Z",
                        "created_at": "2019-11-19T07:19:00.480Z",
                        "environment": "prd",
                        "project": "ed0c2a68b6"
                      }
                    }
              schema:
                type: object
                properties:
                  config:
                    type: object
                    properties:
                      name:
                        type: string
                        example: prd_aws
                      root:
                        type: boolean
                        example: false
                        default: true
                      locked:
                        type: boolean
                        example: false
                        default: true
                      initial_fetch_at:
                        type: string
                        example: "2019-11-19T07:32:12.000Z"
                      last_fetch_at:
                        type: string
                        example: "2019-11-19T07:36:10.980Z"
                      created_at:
                        type: string
                        example: "2019-11-19T07:19:00.480Z"
                      environment:
                        type: string
                        example: prd
                      project:
                        type: string
                        example: ed0c2a68b6
      deprecated: false
  "/v3/configs/config/logs/log":
    get:
      summary: Retrieve
      description: Config Log
      operationId: config_logs-get
      parameters:
        - name: project
          in: query
          description: Unique identifier for the project object.
          required: true
          schema:
            type: string
            default: PROJECT_NAME
        - name: config
          in: query
          description: Name of the config object.
          required: true
          schema:
            type: string
            default: CONFIG_NAME
        - name: log
          in: query
          description: Unique identifier for the log object.
          required: true
          schema:
            type: string
            default: LOG_ID
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "log": {
                        "id": "WaRMMyxHUg4lOKR",
                        "text": "Defaults were updated which resulted in this config's secrets being modified",
                        "html": "Defaults were updated which resulted in this config's secrets being modified",
                        "diff": [
                          {
                            "name": "STRIPE",
                            "added": "sk_test_9YxLnoLDdvOPn2dfjBVPB"
                          },
                          {
                            "name": "ALGOLIA",
                            "added": "N9TOPUBTO"
                          }
                        ],
                        "rollback": false,
                        "created_at": "2019-11-19T07:19:01.073Z",
                        "config": "dev",
                        "environment": "dev",
                        "project": "ed0c2a68b6",
                        "user": {
                          "email": "jake@piedpiper.com",
                          "name": "Jake Sun",
                          "username": "jake",
                          "profile_image_url": "https://www.gravatar.com/avatar/84da5be2b398382c676bfca6b38dae41?s=500&d=retro"
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  log:
                    type: object
                    properties:
                      id:
                        type: string
                        example: WaRMMyxHUg4lOKR
                      text:
                        type: string
                        example:
                          Defaults were updated which resulted in this config's
                          secrets being modified
                      html:
                        type: string
                        example:
                          Defaults were updated which resulted in this config's
                          secrets being modified
                      diff:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: STRIPE
                            added:
                              type: string
                              example: sk_test_9YxLnoLDdvOPn2dfjBVPB
                      rollback:
                        type: boolean
                        example: false
                        default: true
                      created_at:
                        type: string
                        example: "2019-11-19T07:19:01.073Z"
                      config:
                        type: string
                        example: dev
                      environment:
                        type: string
                        example: dev
                      project:
                        type: string
                        example: ed0c2a68b6
                      user:
                        type: object
                        properties:
                          email:
                            type: string
                            example: jake@piedpiper.com
                          name:
                            type: string
                            example: Jake Sun
                          username:
                            type: string
                            example: jake
                          profile_image_url:
                            type: string
                            example: https://www.gravatar.com/avatar/84da5be2b398382c676bfca6b38dae41?s=500&d=retro
      deprecated: false
  "/v3/configs/config/logs":
    get:
      summary: List
      description: Config Logs
      operationId: config_logs-list
      parameters:
        - name: project
          in: query
          description: Unique identifier for the project object.
          required: true
          schema:
            type: string
            default: PROJECT_NAME
        - name: config
          in: query
          description: Name of the config object.
          required: true
          schema:
            type: string
            default: CONFIG_NAME
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          description: Items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "page": 1,
                      "logs": [
                        {
                          "id": "WaRMMyxHUg4lOKR",
                          "text": "Defaults were updated which resulted in this config's secrets being modified",
                          "html": "Defaults were updated which resulted in this config's secrets being modified",
                          "rollback": false,
                          "created_at": "2019-11-19T07:19:01.073Z",
                          "config": "dev",
                          "environment": "dev",
                          "project": "ed0c2a68b6t",
                          "user": {
                            "email": "jake@piedpiper.com",
                            "name": "Jake Sun",
                            "username": "jake",
                            "profile_image_url": "https://www.gravatar.com/avatar/84da5be2b398382c676bfca6b38dae41?s=500&d=retro"
                          }
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 1
                    default: 0
                  logs:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: WaRMMyxHUg4lOKR
                        text:
                          type: string
                          example:
                            Defaults were updated which resulted in this config's
                            secrets being modified
                        html:
                          type: string
                          example:
                            Defaults were updated which resulted in this config's
                            secrets being modified
                        rollback:
                          type: boolean
                          example: false
                          default: true
                        created_at:
                          type: string
                          example: "2019-11-19T07:19:01.073Z"
                        config:
                          type: string
                          example: dev
                        environment:
                          type: string
                          example: dev
                        project:
                          type: string
                          example: ed0c2a68b6t
                        user:
                          type: object
                          properties:
                            email:
                              type: string
                              example: jake@piedpiper.com
                            name:
                              type: string
                              example: Jake Sun
                            username:
                              type: string
                              example: jake
                            profile_image_url:
                              type: string
                              example: https://www.gravatar.com/avatar/84da5be2b398382c676bfca6b38dae41?s=500&d=retro
      deprecated: false
  "/v3/configs/config/secrets":
    get:
      summary: List
      description: Secrets
      operationId: secrets-list
      parameters:
        - name: project
          in: query
          description: Unique identifier for the project object.
          required: true
          schema:
            type: string
            default: PROJECT_NAME
        - name: config
          in: query
          description: Name of the config object.
          required: true
          schema:
            type: string
            default: CONFIG_NAME
        - name: accepts
          in: header
          description: "Available options are: **application/json**, **text/plain**"
          schema:
            type: string
            default: application/json
        - name: include_dynamic_secrets
          in: query
          description:
            Whether or not to issue leases and include dynamic secret values
            for the config
          schema:
            type: boolean
            default: false
        - name: dynamic_secrets_ttl_sec
          in: query
          description:
            The number of seconds until dynamic leases expire. Must be used
            with `include_dynamic_secrets`. Defaults to 1800 (30 minutes).
          schema:
            type: integer
            format: int32
        - name: secrets
          in: query
          description: A comma-separated list of secrets to include in the response
          schema:
            type: string
        - name: include_managed_secrets
          in: query
          description: Whether to include Doppler's auto-generated (managed) secrets
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"secrets\": {\n    \"STRIPE\": {\n      \"raw\": \"sk_test_9YxLnoLDdvOPn2dfjBVPB\",\n
                    \     \"computed\": \"sk_test_9YxLnoLDdvOPn2dfjBVPB\",\n      \"note\":
                    \"\",\n      \"rawVisibility\": \"masked\",\n      \"computedVisibility\":
                    \"masked\"\n    },\n    \"ALGOLIA\": {\n      \"raw\": \"N9TOPUCTO\",\n
                    \     \"computed\": \"N9TOPUCTO\",\n      \"note\": \"\",\n      \"rawVisibility\":
                    \"masked\",\n      \"computedVisibility\": \"masked\"\n    },\n
                    \   \"DATABASE\": {\n    \t\"raw\": \"${USER}@aws.dynamodb.com:9876\",\n
                    \     \"computed\": \"brian@aws.dynamodb.com:9876\",\n      \"note\":
                    \"\",\n      \"rawVisibility\": \"restricted\",\n      \"computedVisibility\":
                    \"restricted\"\n    },\n    \"USER\": {\n    \t\"raw\": \"brian\",\n
                    \     \"computed\": \"brian\",\n      \"note\": \"\",\n      \"rawVisibility\":
                    \"unmasked\",\n      \"computedVisibility\": \"unmasked\"\n    }\n
                    \ }\n}"
              schema:
                type: object
                properties:
                  secrets:
                    type: object
                    properties:
                      STRIPE:
                        type: object
                        properties:
                          raw:
                            type: string
                            example: sk_test_9YxLnoLDdvOPn2dfjBVPB
                          computed:
                            type: string
                            example: sk_test_9YxLnoLDdvOPn2dfjBVPB
                          note:
                            type: string
                            example: ""
                          rawVisibility:
                            type: string
                            example: masked
                          computedVisibility:
                            type: string
                            example: masked
                      ALGOLIA:
                        type: object
                        properties:
                          raw:
                            type: string
                            example: N9TOPUCTO
                          computed:
                            type: string
                            example: N9TOPUCTO
                          note:
                            type: string
                            example: ""
                          rawVisibility:
                            type: string
                            example: masked
                          computedVisibility:
                            type: string
                            example: masked
                      DATABASE:
                        type: object
                        properties:
                          raw:
                            type: string
                            example: "${USER}@aws.dynamodb.com:9876"
                          computed:
                            type: string
                            example: brian@aws.dynamodb.com:9876
                          note:
                            type: string
                            example: ""
                          rawVisibility:
                            type: string
                            example: restricted
                          computedVisibility:
                            type: string
                            example: restricted
                      USER:
                        type: object
                        properties:
                          raw:
                            type: string
                            example: brian
                          computed:
                            type: string
                            example: brian
                          note:
                            type: string
                            example: ""
                          rawVisibility:
                            type: string
                            example: unmasked
                          computedVisibility:
                            type: string
                            example: unmasked
      deprecated: false
    post:
      summary: Update
      description: Secrets
      operationId: secrets-update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - project
                - config
              properties:
                project:
                  type: string
                  description: Unique identifier for the project object.
                  default: PROJECT_NAME
                config:
                  type: string
                  description: Name of the config object.
                  default: CONFIG_NAME
                secrets:
                  type: object
                  description:
                    Either `secrets` or `change_requests` is required (can't
                    use both). Object of secrets you would like to save to the config.
                    Try it with the sample secrets below.
                  properties:
                    STRIPE:
                      type: string
                      default: sk_test_9YxLnoLDdvOPn2dfjBVPB
                    ALGOLIA:
                      type: string
                      default: N9TOPUCTO
                    DATABASE:
                      type: string
                      default: "${USER}@aws.dynamodb.com:9876"
                change_requests:
                  type: array
                  description:
                    Either `secrets` or `change_requests` is required (can't
                    use both). Object of secrets you would like to save to the config.
                    Try it with the sample secrets below.
                  items:
                    properties:
                      name:
                        type: string
                        description: The name of the secret.
                      originalName:
                        type: string
                        description:
                          The original name of the secret. Use `null` (an
                          actual `null`, not the string `null`) or omit this parameter
                          for new secrets. If it differs from `name` then a rename
                          is inferred.
                      value:
                        type: string
                        description:
                          The value the secret should have. Use `null`
                          (an actual `null`, not the string `null`) to leave the existing
                          secret value unchanged.
                      originalValue:
                        type: string
                        description:
                          The value you expect the secret to have before
                          `name` is applied. If specified, the request will only be
                          processed if the provided value matches what's found in
                          Doppler.
                      visibility:
                        type: string
                        description:
                          Must be set to either `masked`, `unmasked`, or
                          `restricted`.
                      originalVisibility:
                        type: string
                        description:
                          Must be set to either `masked`, `unmasked`, or
                          `restricted`. The visibility you expect the secret to have
                          before `visibility` is applied. If specified, the request
                          will only be processed if the provided visibility matches
                          what's found in Doppler.
                      shouldPromote:
                        type: boolean
                        description:
                          Defaults to `false`. Can only be set to `true`
                          if the config being updated is a branch config. If set to
                          `true`, the provided secret will be set in both the branch
                          config as well as the root config in that environment.
                      shouldDelete:
                        type: boolean
                        description:
                          Defaults to `false`. If set to `true`, will delete
                          the secret matching the `name` field.
                      shouldConverge:
                        type: boolean
                        description:
                          Defaults to `false`. Can only be set to `true`
                          if the config being updated is a branch config and there
                          is a secret with the same name in the root config. In this
                          case, the branch secret will inherit the value and visibility
                          type from the root secret.
                      valueType:
                        type: object
                        description:
                          The default valueType (string) will result in
                          no validations being applied.
                        properties:
                          type:
                            type: string
                            enum:
                              - string
                              - json
                              - json5
                              - boolean
                              - integer
                              - decimal
                              - email
                              - url
                              - uuidv4
                              - cuid2
                              - ulid
                              - datetime8601
                              - date8601
                              - yaml
                      originalValueType:
                        type: object
                        description:
                          The valueType you expect the secret to have before
                          `valueType` is applied. If specified, the request will only
                          be processed if the provided valueType matches what's found
                          in Doppler.
                        properties:
                          type:
                            type: string
                            enum:
                              - string
                              - json
                              - json5
                              - boolean
                              - integer
                              - decimal
                              - email
                              - url
                              - uuidv4
                              - cuid2
                              - ulid
                              - datetime8601
                              - date8601
                              - yaml
                    required:
                      - name
                      - originalName
                      - value
                    type: object
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"secrets\": {\n    \"STRIPE\": {\n      \"raw\": \"sk_test_9YxLnoLDdvOPn2dfjBVPB\",\n
                    \     \"computed\": \"sk_test_9YxLnoLDdvOPn2dfjBVPB\",\n      \"note\":
                    \"\"\n    },\n    \"ALGOLIA\": {\n      \"raw\": \"N9TOPUCTO\",\n
                    \     \"computed\": \"N9TOPUCTO\",\n      \"note\": \"\"\n    },\n
                    \   \"DATABASE\": {\n    \t\"raw\": \"${USER}@aws.dynamodb.com:9876\",\n
                    \     \"computed\": \"brian@aws.dynamodb.com:9876\",\n      \"note\":
                    \"\"\n    }\n  }\n}"
              schema:
                type: object
                properties:
                  secrets:
                    type: object
                    properties:
                      STRIPE:
                        type: object
                        properties:
                          raw:
                            type: string
                            example: sk_test_9YxLnoLDdvOPn2dfjBVPB
                          computed:
                            type: string
                            example: sk_test_9YxLnoLDdvOPn2dfjBVPB
                          note:
                            type: string
                            example: ""
                      ALGOLIA:
                        type: object
                        properties:
                          raw:
                            type: string
                            example: N9TOPUCTO
                          computed:
                            type: string
                            example: N9TOPUCTO
                          note:
                            type: string
                            example: ""
                      DATABASE:
                        type: object
                        properties:
                          raw:
                            type: string
                            example: "${USER}@aws.dynamodb.com:9876"
                          computed:
                            type: string
                            example: brian@aws.dynamodb.com:9876
                          note:
                            type: string
                            example: ""
      deprecated: false
  "/v3/workplace":
    post:
      summary: Update
      description: ""
      operationId: workplace-update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Workplace name
                billing_email:
                  type: string
                security_email:
                  type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "workplace": {
                        "id": "188f5",
                        "name": "Test Workplace",
                        "billing_email": "billing@example.com",
                        "security_email": "security@example.com"
                      }
                    }
              schema:
                type: object
                properties:
                  workplace:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 188f5
                      name:
                        type: string
                        example: Test Workplace
                      billing_email:
                        type: string
                        example: billing@example.com
                      security_email:
                        type: string
                        example: security@example.com
      deprecated: false
    get:
      summary: Retrieve
      description: ""
      operationId: workplace-get
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "workplace": {
                        "id": "188f5",
                        "name": "Test Workplace",
                        "billing_email": "billing@example.com",
                        "security_email": "security@example.com"
                      }
                    }
              schema:
                type: object
                properties:
                  workplace:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 188f5
                      name:
                        type: string
                        example: Test Workplace
                      billing_email:
                        type: string
                        example: billing@example.com
                      security_email:
                        type: string
                        example: security@example.com
      deprecated: false
  "/v3/logs":
    get:
      summary: List
      description: Activity Logs
      operationId: activity_logs-list
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: string
            default: "1"
        - name: per_page
          in: query
          description: Items per page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "page": 1,
                      "logs": [
                        {
                          "id": "emwk7ra70oem3xa",
                          "text": "Modified Development defaults in Pied Piper Demo project",
                          "html": "Modified <a href='/workplace/103/projects/wk7radvodfneb/defaults?stage=dev'>Development's</a> defaults in <a href='/workplace/wk7radvodfneb/pipelines/410'>Pied Piper Demo</a> project",
                          "created_at": "2019-04-01T21:40:34.891Z",
                          "config": null,
                          "environment": "dev",
                          "project": "wk7radvodfneb",
                          "user": {
                            "email": "adam@piedpiper.com",
                            "name": "Adam Smitth",
                            "profile_image_url": "https://www.gravatar.com/avatar/082c73740a33762db7c5cc7481833e1e?s=500&d=retro"
                          }
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 1
                    default: 0
                  logs:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: emwk7ra70oem3xa
                        text:
                          type: string
                          example:
                            Modified Development defaults in Pied Piper Demo
                            project
                        html:
                          type: string
                          example:
                            Modified <a href='/workplace/103/projects/wk7radvodfneb/defaults?stage=dev'>Development's</a>
                            defaults in <a href='/workplace/wk7radvodfneb/pipelines/410'>Pied
                            Piper Demo</a> project
                        created_at:
                          type: string
                          example: "2019-04-01T21:40:34.891Z"
                        config: {}
                        environment:
                          type: string
                          example: dev
                        project:
                          type: string
                          example: wk7radvodfneb
                        user:
                          type: object
                          properties:
                            email:
                              type: string
                              example: adam@piedpiper.com
                            name:
                              type: string
                              example: Adam Smitth
                            profile_image_url:
                              type: string
                              example: https://www.gravatar.com/avatar/082c73740a33762db7c5cc7481833e1e?s=500&d=retro
      deprecated: false
  "/v3/logs/log":
    get:
      summary: Retrieve
      description: Activity Log
      operationId: activity_logs-retrieve
      parameters:
        - name: log
          in: query
          description: Unique identifier for the log object.
          required: true
          schema:
            type: string
            default: LOG_ID
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "log": {
                        "id": "emwk7ra70oem3xa",
                        "text": "Modified Development defaults in Pied Piper Demo project",
                        "html": "Modified <a href='/workplace/103/projects/wk7radvodfneb/defaults?stage=dev'>Development's</a> defaults in <a href='/workplace/wk7radvodfneb/pipelines/410'>Pied Piper Demo</a> project",
                        "created_at": "2019-04-01T21:40:34.891Z",
                        "config": null,
                        "environment": "dev",
                        "project": "wk7radvodfneb",
                        "user": {
                          "email": "adam@piedpiper.com",
                          "name": "Adam Smitth",
                          "profile_image_url": "https://www.gravatar.com/avatar/082c73740a33762db7c5cc7481833e1e?s=500&d=retro"
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  log:
                    type: object
                    properties:
                      id:
                        type: string
                        example: emwk7ra70oem3xa
                      text:
                        type: string
                        example:
                          Modified Development defaults in Pied Piper Demo
                          project
                      html:
                        type: string
                        example:
                          Modified <a href='/workplace/103/projects/wk7radvodfneb/defaults?stage=dev'>Development's</a>
                          defaults in <a href='/workplace/wk7radvodfneb/pipelines/410'>Pied
                          Piper Demo</a> project
                      created_at:
                        type: string
                        example: "2019-04-01T21:40:34.891Z"
                      config: {}
                      environment:
                        type: string
                        example: dev
                      project:
                        type: string
                        example: wk7radvodfneb
                      user:
                        type: object
                        properties:
                          email:
                            type: string
                            example: adam@piedpiper.com
                          name:
                            type: string
                            example: Adam Smitth
                          profile_image_url:
                            type: string
                            example: https://www.gravatar.com/avatar/082c73740a33762db7c5cc7481833e1e?s=500&d=retro
      deprecated: false
  "/v3/configs/config/secret":
    get:
      summary: Retrieve
      description: Secret
      operationId: secrets-get
      parameters:
        - name: project
          in: query
          description: Unique identifier for the project object.
          required: true
          schema:
            type: string
            default: PROJECT_NAME
        - name: config
          in: query
          description: Name of the config object.
          required: true
          schema:
            type: string
            default: CONFIG_NAME
        - name: name
          in: query
          description: Name of the secret.
          required: true
          schema:
            type: string
            default: SECRET_NAME
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "name": "DATABASE",
                      "value": {
                        "raw": "${USER}@aws.dynamodb.com:9876",
                        "computed": "brian@aws.dynamodb.com:9876",
                        "note": ""
                      }
                    }
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: DATABASE
                  value:
                    type: object
                    properties:
                      raw:
                        type: string
                        example: "${USER}@aws.dynamodb.com:9876"
                      computed:
                        type: string
                        example: brian@aws.dynamodb.com:9876
                      note:
                        type: string
                        example: ""
      deprecated: false
    delete:
      summary: Delete
      description: Secret
      operationId: secrets-delete
      parameters:
        - name: project
          in: query
          description: Unique identifier for the project object.
          required: true
          schema:
            type: string
            default: PROJECT_NAME
        - name: config
          in: query
          description: Name of the config object.
          required: true
          schema:
            type: string
            default: CONFIG_NAME
        - name: name
          in: query
          description: Name of the secret.
          required: true
          schema:
            type: string
            default: SECRET_NAME
      responses:
        "204":
          description: "204"
          content:
            application/json:
              examples:
                Result:
                  value: ""
      deprecated: false
  "/v3/configs/config/tokens/token":
    delete:
      summary: Delete
      description: Service Token
      operationId: service_tokens-delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - project
                - config
              properties:
                project:
                  type: string
                  description: Unique identifier for the project object.
                  default: PROJECT_NAME
                config:
                  type: string
                  description: Name of the config object.
                  default: CONFIG_NAME
                slug:
                  type: string
                  description: The slug of the service token.
                  default: TOKEN_SLUG
                token:
                  type: string
                  description: The token value.
                  default: TOKEN_VALUE
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "success": true
                    }
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                    default: true
      deprecated: false
  "/v3/configs/config/tokens":
    get:
      summary: List
      description: Service Tokens
      operationId: service_tokens-list
      parameters:
        - name: project
          in: query
          description: Unique identifier for the project object.
          required: true
          schema:
            type: string
            default: PROJECT_NAME
        - name: config
          in: query
          description: Name of the config object.
          required: true
          schema:
            type: string
            default: CONFIG_NAME
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "tokens": [
                        {
                          "name": "AWS Lambda",
                          "slug": "56c69f96-3045-11ea-978f-2e728ce88125",
                          "created_at": "2019-11-19T07:19:01.073Z",
                          "config": "dev",
                          "environment": "dev",
                          "project": "ed0c2a68b6t",
                          "expires_at": null
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  tokens:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: AWS Lambda
                        slug:
                          type: string
                          example: 56c69f96-3045-11ea-978f-2e728ce88125
                        created_at:
                          type: string
                          example: "2019-11-19T07:19:01.073Z"
                        config:
                          type: string
                          example: dev
                        environment:
                          type: string
                          example: dev
                        project:
                          type: string
                          example: ed0c2a68b6t
                        expires_at:
                          type: string
      deprecated: false
    post:
      summary: Create
      description: Service Token
      operationId: service_tokens-create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - project
                - config
                - name
              properties:
                project:
                  type: string
                  description: Unique identifier for the project object.
                  default: PROJECT_NAME
                config:
                  type: string
                  description: Name of the config object.
                  default: CONFIG_NAME
                name:
                  type: string
                  description: Name of the service token.
                  default: TOKEN_NAME
                expire_at:
                  type: string
                  description: Unix timestamp of when token should expire.
                  format: date-time
                access:
                  type: string
                  description: Token's capabilities.
                  default: read
                  enum:
                    - read
                    - read/write
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "token": {
                        "name": "AWS Lambda",
                        "slug": "56c69f96-3045-11ea-978f-2e728ce88125",
                        "created_at": "2019-11-19T07:19:01.073Z",
                        "key": "<fake token>",
                        "config": "dev",
                        "environment": "dev",
                        "project": "ed0c2a68b6t",
                        "expires_at": null,
                        "access": "read"
                      }
                    }
              schema:
                type: object
                properties:
                  token:
                    type: object
                    properties:
                      name:
                        type: string
                        example: AWS Lambda
                      slug:
                        type: string
                        example: 56c69f96-3045-11ea-978f-2e728ce88125
                      created_at:
                        type: string
                        example: "2019-11-19T07:19:01.073Z"
                      key:
                        type: string
                        example: fake-token
                      config:
                        type: string
                        example: dev
                      environment:
                        type: string
                        example: dev
                      project:
                        type: string
                        example: ed0c2a68b6t
                      expires_at:
                        type: string
                      access:
                        type: string
                        example: read
      deprecated: false
  "/v3/configs/config/logs/log/rollback":
    post:
      summary: Rollback
      description: Config Log
      operationId: config_logs-rollback
      parameters:
        - name: project
          in: query
          description: Unique identifier for the project object.
          required: true
          schema:
            type: string
            default: PROJECT_NAME
        - name: config
          in: query
          description: Name of the config object.
          required: true
          schema:
            type: string
            default: CONFIG_NAME
        - name: log
          in: query
          description: Unique identifier for the log object.
          required: true
          schema:
            type: string
            default: LOG_ID
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "log": {
                        "id": "koVGA1cgzkFnTHx",
                        "text": "Rolled back log WaRMMyxHUg4lOKR",
                        "html": "Rolled back log <a  href='https://doppler.internal:3030/workplace/2ada3/enclave/484/configs/2026/logs?id=WaRMMyxHUg4lOKR'>WaRMMyxHUg4lOKR</a>",
                        "diff": [
                          {
                            "name": "STRIPE",
                            "removed": "sk_test_9YxLnoLDdvOPn2dfjBVPB"
                          },
                          {
                            "name": "ALGOLIA",
                            "removed": "N9TOPUBTO"
                          }
                        ],
                        "rollback": true,
                        "created_at": "2019-11-24T02:25:54.761Z",
                        "config": "dev",
                        "environment": "dev",
                        "project": "ed0c2a68b6",
                        "user": {
                          "email": "jake@piedpiper.com",
                          "name": "Jake Sun",
                          "username": "jake",
                          "profile_image_url": "https://www.gravatar.com/avatar/84da5be2b398382c676bfca6b38dae41?s=500&d=retro"
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  log:
                    type: object
                    properties:
                      id:
                        type: string
                        example: koVGA1cgzkFnTHx
                      text:
                        type: string
                        example: Rolled back log WaRMMyxHUg4lOKR
                      html:
                        type: string
                        example: Rolled back log <a  href='https://doppler.internal:3030/workplace/2ada3/enclave/484/configs/2026/logs?id=WaRMMyxHUg4lOKR'>WaRMMyxHUg4lOKR</a>
                      diff:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: STRIPE
                            removed:
                              type: string
                              example: sk_test_9YxLnoLDdvOPn2dfjBVPB
                      rollback:
                        type: boolean
                        example: true
                        default: true
                      created_at:
                        type: string
                        example: "2019-11-24T02:25:54.761Z"
                      config:
                        type: string
                        example: dev
                      environment:
                        type: string
                        example: dev
                      project:
                        type: string
                        example: ed0c2a68b6
                      user:
                        type: object
                        properties:
                          email:
                            type: string
                            example: jake@piedpiper.com
                          name:
                            type: string
                            example: Jake Sun
                          username:
                            type: string
                            example: jake
                          profile_image_url:
                            type: string
                            example: https://www.gravatar.com/avatar/84da5be2b398382c676bfca6b38dae41?s=500&d=retro
      deprecated: false
  "/v3/configs/config/unlock":
    post:
      summary: Unlock
      description: Allow the config to be renamed and/or deleted.
      operationId: configs-unlock
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - project
                - config
              properties:
                project:
                  type: string
                  description: Unique identifier for the project object.
                  default: PROJECT_NAME
                config:
                  type: string
                  description: Name of the config.
                  default: CONFIG_NAME
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "config": {
                        "name": "prd_aws",
                        "root": false,
                        "locked": false,
                        "initial_fetch_at": "2019-11-19T07:32:12.000Z",
                        "last_fetch_at": "2019-11-19T07:36:10.980Z",
                        "created_at": "2019-11-19T07:19:00.480Z",
                        "environment": "prd",
                        "project": "ed0c2a68b6"
                      }
                    }
              schema:
                type: object
                properties:
                  config:
                    type: object
                    properties:
                      name:
                        type: string
                        example: prd_aws
                      root:
                        type: boolean
                        example: false
                        default: true
                      locked:
                        type: boolean
                        example: false
                        default: true
                      initial_fetch_at:
                        type: string
                        example: "2019-11-19T07:32:12.000Z"
                      last_fetch_at:
                        type: string
                        example: "2019-11-19T07:36:10.980Z"
                      created_at:
                        type: string
                        example: "2019-11-19T07:19:00.480Z"
                      environment:
                        type: string
                        example: prd
                      project:
                        type: string
                        example: ed0c2a68b6
      deprecated: false
  "/v3/configs/config/clone":
    post:
      summary: Clone
      description:
        Create a new branch config by cloning another. This duplicates
        a branch config and all its secrets.
      operationId: configs-clone
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - project
                - config
                - name
              properties:
                project:
                  type: string
                  description: Unique identifier for the project object.
                  default: PROJECT_NAME
                config:
                  type: string
                  description: Name of the branch config being cloned.
                  default: CONFIG_NAME
                name:
                  type: string
                  description: Name of the new branch config.
                  default: NEW_CONFIG_NAME
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "config": {
                        "name": "prd_aws",
                        "root": false,
                        "locked": false,
                        "initial_fetch_at": "2019-11-19T07:32:12.000Z",
                        "last_fetch_at": "2019-11-19T07:36:10.980Z",
                        "created_at": "2019-11-19T07:19:00.480Z",
                        "environment": "prd",
                        "project": "ed0c2a68b6"
                      }
                    }
              schema:
                type: object
                properties:
                  config:
                    type: object
                    properties:
                      name:
                        type: string
                        example: prd_aws
                      root:
                        type: boolean
                        example: false
                        default: true
                      locked:
                        type: boolean
                        example: false
                        default: true
                      initial_fetch_at:
                        type: string
                        example: "2019-11-19T07:32:12.000Z"
                      last_fetch_at:
                        type: string
                        example: "2019-11-19T07:36:10.980Z"
                      created_at:
                        type: string
                        example: "2019-11-19T07:19:00.480Z"
                      environment:
                        type: string
                        example: prd
                      project:
                        type: string
                        example: ed0c2a68b6
      deprecated: false
  "/v3/configs/config/lock":
    post:
      summary: Lock
      description: Prevent the config from being renamed or deleted.
      operationId: configs-lock
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - project
                - config
              properties:
                project:
                  type: string
                  description: Unique identifier for the project object.
                  default: PROJECT_NAME
                config:
                  type: string
                  description: Name of the config.
                  default: CONFIG_NAME
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "config": {
                        "name": "prd_aws",
                        "root": false,
                        "locked": true,
                        "initial_fetch_at": "2019-11-19T07:32:12.000Z",
                        "last_fetch_at": "2019-11-19T07:36:10.980Z",
                        "created_at": "2019-11-19T07:19:00.480Z",
                        "environment": "prd",
                        "project": "ed0c2a68b6"
                      }
                    }
              schema:
                type: object
                properties:
                  config:
                    type: object
                    properties:
                      name:
                        type: string
                        example: prd_aws
                      root:
                        type: boolean
                        example: false
                        default: true
                      locked:
                        type: boolean
                        example: true
                        default: true
                      initial_fetch_at:
                        type: string
                        example: "2019-11-19T07:32:12.000Z"
                      last_fetch_at:
                        type: string
                        example: "2019-11-19T07:36:10.980Z"
                      created_at:
                        type: string
                        example: "2019-11-19T07:19:00.480Z"
                      environment:
                        type: string
                        example: prd
                      project:
                        type: string
                        example: ed0c2a68b6
      deprecated: false
  "/v3/configs/config/secrets/download":
    get:
      summary: Download
      description: Download Secrets
      operationId: secrets-download
      parameters:
        - name: project
          in: query
          description:
            Unique identifier for the project object. Not required if using
            a Service Token.
          required: true
          schema:
            type: string
        - name: config
          in: query
          description: Name of the config object. Not required if using a Service Token.
          required: true
          schema:
            type: string
        - name: format
          in: query
          schema:
            type: string
            enum:
              - json
              - dotnet-json
              - env
              - yaml
              - docker
              - env-no-quotes
            default: json
        - name: name_transformer
          in: query
          description: Transform secret names to a different case
          schema:
            type: string
            enum:
              - camel
              - upper-camel
              - lower-snake
              - tf-var
              - dotnet
              - dotnet-env
              - lower-kebab
        - name: include_dynamic_secrets
          in: query
          description:
            Whether or not to issue leases and include dynamic secret values
            for the config
          schema:
            type: boolean
            default: false
        - name: dynamic_secrets_ttl_sec
          in: query
          description:
            The number of seconds until dynamic leases expire. Must be used
            with `include_dynamic_secrets`. Defaults to 1800 (30 minutes).
          schema:
            type: integer
            format: int32
            default: 1800
        - name: secrets
          in: query
          description:
            Comma-delimited list of secrets to include in the download. Defaults
            to all secrets if left unspecified.
          schema:
            type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "STRIPE": "sk_test_9YxLnoLDdvOPn2dfjBVPB",
                      "ALGOLIA": "N9TOPUCTO",
                      "DATABASE": "brian@aws.dynamodb.com:9876",
                      "USER": "brian"
                    }
              schema:
                type: object
                properties:
                  STRIPE:
                    type: string
                    example: sk_test_9YxLnoLDdvOPn2dfjBVPB
                  ALGOLIA:
                    type: string
                    example: N9TOPUCTO
                  DATABASE:
                    type: string
                    example: brian@aws.dynamodb.com:9876
                  USER:
                    type: string
                    example: brian
      deprecated: false
  "/v3/workplace/users/{workplace_user_id}":
    get:
      summary: Workplace User
      description: Get a specific user in a workplace
      operationId: audit-get_user
      parameters:
        - name: workplace_user_id
          in: path
          description: The ID of the workplace user
          schema:
            type: string
          required: true
        - name: settings
          in: query
          description:
            If true, the api will return more information if the user has
            e.g. SAML enabled and/or Multi Factor Auth enabled
          schema:
            type: boolean
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "workplace_user": {
                        "id": "9629f890-eb33-426c-8694-28ce363b44f0",
                        "access": "owner",
                        "created_at": "2021-01-08T02:43:20.524Z",
                        "user": {
                          "email": "ruud.visser@doppler.com",
                          "name": "Ruud Visser",
                          "username": "ruud",
                          "profile_image_url": "https://lh3.googleusercontent.com/a-/AOh14Ggx8--xAHCMfmrNwV3hVGWrwSicyaALmjvu5of1=s96-c",
                          "mfa_enabled": false,
                          "thirdparty_sso_enabled": true,
                          "saml_sso_enabled": false
                        }
                      },
                      "success": true
                    }
              schema:
                type: object
                properties:
                  workplace_user:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 9629f890-eb33-426c-8694-28ce363b44f0
                      access:
                        type: string
                        example: owner
                      created_at:
                        type: string
                        example: "2021-01-08T02:43:20.524Z"
                      user:
                        type: object
                        properties:
                          email:
                            type: string
                            example: ruud.visser@doppler.com
                          name:
                            type: string
                            example: Ruud Visser
                          username:
                            type: string
                            example: ruud
                          profile_image_url:
                            type: string
                            example: https://lh3.googleusercontent.com/a-/AOh14Ggx8--xAHCMfmrNwV3hVGWrwSicyaALmjvu5of1=s96-c
                          mfa_enabled:
                            type: boolean
                            example: false
                            default: true
                          thirdparty_sso_enabled:
                            type: boolean
                            example: true
                            default: true
                          saml_sso_enabled:
                            type: boolean
                            example: false
                            default: true
                  success:
                    type: boolean
                    example: true
                    default: true
      deprecated: false
  "/v3/configs/config/dynamic_secrets/dynamic_secret/leases/lease":
    delete:
      summary: Revoke Lease
      description: ""
      operationId: dynamic_secrets-revoke_lease
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - project
                - config
                - dynamic_secret
                - slug
              properties:
                project:
                  type: string
                  description: The project where the dynamic secret is located
                config:
                  type: string
                  description: The config where the dynamic secret is located
                dynamic_secret:
                  type: string
                  description:
                    The name of the dynamic secret from which this lease
                    was issued
                slug:
                  type: string
                  description: The slug of the lease to revoke
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: '{ "success": true }'
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                    default: true
      deprecated: false
  "/v3/auth/revoke":
    post:
      summary: Revoke
      description: Revoke an auth token
      operationId: auth-revoke
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: ""
      deprecated: false
      security: []
  "/v3/configs/config/dynamic_secrets/dynamic_secret/leases":
    post:
      summary: Issue Lease
      description: Issue a lease for a dynamic secret
      operationId: dynamic_secrets-issue_lease
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - project
                - config
                - dynamic_secret
                - ttl_sec
              properties:
                project:
                  type: string
                  description: The project where the dynamic secret is located
                config:
                  type: string
                  description: The config where the dynamic secret is located
                dynamic_secret:
                  type: string
                  description:
                    The name of the dynamic secret for which to issue this
                    lease
                ttl_sec:
                  type: integer
                  description:
                    The number of seconds until this lease is automatically
                    revoked
                  format: int32
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "success": true,
                        "id": "59ed03c9-63a7-4789-9187-a3d858355353",
                        "expires_at": "2022-02-18T20:36:28.427Z",
                        "value": {  }
                    }
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                    default: true
                  id:
                    type: string
                    example: 59ed03c9-63a7-4789-9187-a3d858355353
                  expires_at:
                    type: string
                    example: "2022-02-18T20:36:28.427Z"
                  value:
                    type: object
                    properties: {}
      deprecated: false
  "/v3/configs/config/secrets/note":
    post:
      summary: Update Note
      description: Set a note on a secret
      operationId: secrets-update_note
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - project
                - secret
                - note
              properties:
                project:
                  type: string
                  description: Unique identifier for the project object.
                  default: PROJECT_NAME
                config:
                  type: string
                  description:
                    "Deprecated: Config is no longer required as notes
                    have always been set at the project level."
                secret:
                  type: string
                  description: The name of the secret
                  default: SECRET_NAME
                note:
                  type: string
                  description:
                    The note you want to set on the secret. This note will
                    be applied to the specified secret in all environments.
                  default: YOUR_NOTE
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "secret": "FOO",
                      "note": "bar"
                    }
              schema:
                type: object
                properties:
                  secret:
                    type: string
                    example: FOO
                  note:
                    type: string
                    example: bar
      deprecated: false
  "/v3/configs/config/secrets/names":
    get:
      summary: List Names
      description: Secret Names
      operationId: secrets-names
      parameters:
        - name: project
          in: query
          description: Unique identifier for the project object.
          required: true
          schema:
            type: string
            default: PROJECT_NAME
        - name: config
          in: query
          description: Name of the config object.
          required: true
          schema:
            type: string
            default: CONFIG_NAME
        - name: include_dynamic_secrets
          in: query
          description:
            Whether or not to issue leases and include dynamic secret values
            for the config
          schema:
            type: boolean
            default: false
        - name: include_managed_secrets
          in: query
          description: Whether to include Doppler's auto-generated (managed) secrets
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "names": [
                        "STRIPE",
                        "ALGOLIA",
                        "DATABASE",
                        "USER"
                      ]
                    }
              schema:
                type: object
                properties:
                  names:
                    type: array
                    items:
                      type: string
                      example: STRIPE
      deprecated: false
  "/v3/integrations/integration":
    delete:
      summary: Delete
      description: Delete an existing integration.
      operationId: integrations-delete
      parameters:
        - name: integration
          in: query
          description: The slug of the integration to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
    get:
      summary: Retrieve
      description: Retrieve an existing integration
      operationId: integrations-get
      parameters:
        - name: integration
          in: query
          description: The integration slug
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n\t\"integration\": {\n  \t\"slug\": \"00000000-0000-0000-0000-000000000000\",\n
                    \   \"name\": \"my-integration\",\n    \"type\": \"aws\"\n  }\n}"
              schema:
                type: object
                properties:
                  integration:
                    type: object
                    properties:
                      slug:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      name:
                        type: string
                        example: my-integration
                      type:
                        type: string
                        example: aws
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
    put:
      summary: Update
      description: Update an existing integration.
      operationId: integrations-update
      parameters:
        - name: integration
          in: query
          description: The slug of the integration to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The new name of the integration
                data:
                  type: string
                  description: The new authentication data for the integration
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/v3/configs/config/syncs":
    post:
      summary: Create
      description: Create a new secrets sync.
      operationId: syncs-create
      parameters:
        - name: project
          in: query
          description: The project slug
          required: true
          schema:
            type: string
        - name: config
          in: query
          description: The config slug
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - integration
                - data
              properties:
                integration:
                  type: string
                  description: The integration slug which the sync will use
                data:
                  type: object
                  description: Configuration data for the sync
                  properties: {}
                import_option:
                  type: string
                  description:
                    An option indicating if and how Doppler should attempt
                    to import secrets from the sync destination
                  default: none
                  enum:
                    - none
                    - prefer_doppler
                    - prefer_integration
                await_initial_sync:
                  type: boolean
                  description:
                    Causes sync creation to wait for the initial sync to
                    complete before returning.
                  default: true
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n\t\"sync\": {\n  \t\"slug\": \"00000000-0000-0000-0000-000000000000\",\n
                    \ \t\"integration\": \"00000000-0000-0000-0000-000000000000\",\n
                    \   \"project\": \"backend\",\n    \"config\": \"prd\",\n    \"enabled\":
                    true,\n    \"lastSyncedAt\": \"2023-08-01T00:00:00.000Z\"\n  }\n}"
              schema:
                type: object
                properties:
                  sync:
                    type: object
                    properties:
                      slug:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      integration:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      project:
                        type: string
                        example: backend
                      config:
                        type: string
                        example: prd
                      enabled:
                        type: boolean
                        example: true
                        default: true
                      lastSyncedAt:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/v3/configs/config/syncs/sync":
    delete:
      summary: Delete
      description: Delete an existing sync.
      operationId: syncs-delete
      parameters:
        - name: project
          in: query
          description: The project slug
          required: true
          schema:
            type: string
        - name: config
          in: query
          description: The config slug
          required: true
          schema:
            type: string
        - name: sync
          in: query
          description: The sync slug
          required: true
          schema:
            type: string
        - name: delete_from_target
          in: query
          description: Whether or not to delete the synced data from the target integration
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
    get:
      summary: Retrieve
      description: Retrieve an existing secrets sync.
      operationId: syncs-get
      parameters:
        - name: project
          in: query
          description: The project slug
          required: true
          schema:
            type: string
        - name: config
          in: query
          description: The config slug
          required: true
          schema:
            type: string
        - name: sync
          in: query
          description: The sync slug
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n\t\"sync\": {\n  \t\"slug\": \"00000000-0000-0000-0000-000000000000\",\n
                    \ \t\"integration\": \"00000000-0000-0000-0000-000000000000\",\n
                    \   \"project\": \"backend\",\n    \"config\": \"prd\",\n    \"enabled\":
                    true,\n    \"lastSyncedAt\": \"2023-08-01T00:00:00.000Z\"\n  }\n}"
              schema:
                type: object
                properties:
                  sync:
                    type: object
                    properties:
                      slug:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      integration:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      project:
                        type: string
                        example: backend
                      config:
                        type: string
                        example: prd
                      enabled:
                        type: boolean
                        example: true
                        default: true
                      lastSyncedAt:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/v3/me":
    get:
      summary: Me
      description: Get information about a token
      operationId: auth-me
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "slug": "5ba6e0fd-a80a-4c39-9e85-3d5230d44e62",
                      "name": "Doppler-Test",
                      "created_at": "2023-06-15T20:17:33.539Z",
                      "last_seen_at": "2023-06-16T17:09:16.079Z",
                      "type": "cli",
                      "token_preview": "dp.ct...b8aked",
                      "workplace": {
                        "slug": "2faa85f6610102d983522",
                        "name": "Doppler University"
                      }
                    }
              schema:
                type: object
                properties:
                  slug:
                    type: string
                    example: 5ba6e0fd-a80a-4c39-9e85-3d5230d44e62
                  name:
                    type: string
                    example: Doppler-Test
                  created_at:
                    type: string
                    example: "2023-06-15T20:17:33.539Z"
                  last_seen_at:
                    type: string
                    example: "2023-06-16T17:09:16.079Z"
                  type:
                    type: string
                    example: cli
                  token_preview:
                    type: string
                    example: dp.ct...b8aked
                  workplace:
                    type: object
                    properties:
                      slug:
                        type: string
                        example: 2faa85f6610102d983522
                      name:
                        type: string
                        example: Doppler University
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/v3/integrations":
    post:
      summary: Create
      description: Create a new external integration.
      operationId: integrations-create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - name
              properties:
                type:
                  type: string
                  description: The integration type
                name:
                  type: string
                  description: The name of the integration
                data:
                  type: object
                  description: The authentication data for the integration
                  properties: {}
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n\t\"integration\": {\n  \t\"slug\": \"00000000-0000-0000-0000-000000000000\",\n
                    \   \"name\": \"my-integration\",\n    \"type\": \"aws\"\n  }\n}"
              schema:
                type: object
                properties:
                  integration:
                    type: object
                    properties:
                      slug:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      name:
                        type: string
                        example: my-integration
                      type:
                        type: string
                        example: aws
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
    get:
      summary: List
      description: List all existing integrations
      operationId: integrations-list
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "integrations": [
                        {
                          "slug": "e32d0dcd-c094-4606-aefa-c4127e2a1282",
                          "name": "Cloudflare Integration",
                          "type": "cloudflare_tokens",
                          "kind": "rotatedSecrets",
                          "enabled": true
                        },
                        {
                          "slug": "0cd84923-b8c5-49e6-8713-e6ea2148a6c1",
                          "name": "Doppler University",
                          "type": "qovery",
                          "kind": "sync",
                          "enabled": true,
                          "syncs": [
                            {
                              "slug": "96e9647b-f114-4cf8-adf7-adee91b9f8c7",
                              "enabled": true,
                              "lastSyncedAt": "2023-05-12T19:08:17.089Z",
                              "project": "backend",
                              "config": "prd",
                              "integration": "0cd84923-b8c5-49e6-8713-e6ea2148a6c1"
                            }
                          ]
                        },
                        {
                          "slug": "836cf9fd-11b8-46a7-b0c6-730865b95263",
                          "name": "Doppler University",
                          "type": "railway",
                          "kind": "sync",
                          "enabled": true,
                          "syncs": []
                        }
                      ],
                      "success": true
                    }
              schema:
                type: object
                properties:
                  integrations:
                    type: array
                    items:
                      type: object
                      properties:
                        slug:
                          type: string
                          example: e32d0dcd-c094-4606-aefa-c4127e2a1282
                        name:
                          type: string
                          example: Cloudflare Integration
                        type:
                          type: string
                          example: cloudflare_tokens
                        kind:
                          type: string
                          example: rotatedSecrets
                        enabled:
                          type: boolean
                          example: true
                          default: true
                  success:
                    type: boolean
                    example: true
                    default: true
      deprecated: false
  "/v3/configs/config/trusted_ips":
    get:
      summary: List
      description: ""
      operationId: configs-list_trusted_ips
      parameters:
        - name: project
          in: query
          required: true
          schema:
            type: string
        - name: config
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: "{\n  \"ips\": [\n  \t\"0.0.0.0/0\"\n  ]\n}"
              schema:
                type: object
                properties:
                  ips:
                    type: array
                    items:
                      type: string
                      example: 0.0.0.0/0
      deprecated: false
    delete:
      summary: Delete
      description: ""
      operationId: configs-delete_trusted_ip
      parameters:
        - name: project
          in: query
          required: true
          schema:
            type: string
        - name: config
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ip
              properties:
                ip:
                  type: string
                  description: An IP address or CIDR range
      responses:
        "204":
          description: "204"
          content:
            application/json:
              examples:
                Result:
                  value: ""
        "404":
          description: "404"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
      deprecated: false
    post:
      summary: Add
      description: ""
      operationId: configs-add_trusted_ip
      parameters:
        - name: project
          in: query
          required: true
          schema:
            type: string
        - name: config
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ip
              properties:
                ip:
                  type: string
                  description: An IP address or CIDR range
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                IP added:
                  value: |-
                    {
                      "ip": "0.0.0.0/0"
                    }
              schema:
                type: object
                properties:
                  ip:
                    type: string
                    example: 0.0.0.0/0
        "204":
          description: "204"
          content:
            application/json:
              examples:
                IP exists:
                  value: ""
      deprecated: false
  "/v3/workplace/roles":
    post:
      summary: Create
      description: ""
      operationId: workplace_roles-create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - permissions
              properties:
                name:
                  type: string
                  description: The name of the role
                permissions:
                  type: array
                  description:
                    "An array containing the permissions the role has.
                    Valid permissions are: `all_enclave_projects_admin`, `all_enclave_projects`,
                    `billing_manage`, `billing`, `create_enclave_project`, `custom_roles_manage`,
                    `ekm`, `enclave_secrets_referencing`, `logs_audit`, `logs`, `service_account_api_tokens_manage`,
                    `service_account_api_tokens`, `service_accounts_manage`, `service_accounts`,
                    `settings_manage`, `settings`, `team_manage`, `team`, `verified_domains_manage`,
                    `verified_domains`, `workplace_default_environments_manage`, `workplace_default_environments_read`,
                    `workplace_integrations_list`, `workplace_integrations_manage`,
                    `workplace_integrations_read`"
                  items:
                    type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"role\": {\n    \"name\": \"custom\",\n    \"permissions\":
                    [\"team\"],\n    \"identifier\": \"custom\",\n    \"created_at\":
                    \"2023-08-01T00:00:00.000Z\",\n    \"is_custom_role\": true,\n
                    \   \"is_inline_role\": false\n\t}\n}"
              schema:
                type: object
                properties:
                  role:
                    type: object
                    properties:
                      name:
                        type: string
                        example: custom
                      permissions:
                        type: array
                        items:
                          type: string
                          example: team
                      identifier:
                        type: string
                        example: custom
                      created_at:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
                      is_custom_role:
                        type: boolean
                        example: true
                        default: true
                      is_inline_role:
                        type: boolean
                        example: false
                        default: true
      deprecated: false
    get:
      summary: List
      description: ""
      operationId: workplace_roles-list
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"roles\": [{\n    \"name\": \"custom\",\n    \"permissions\":
                    [\"team\"],\n    \"identifier\": \"custom\",\n    \"created_at\":
                    \"2023-08-01T00:00:00.000Z\",\n    \"is_custom_role\": false,\n
                    \   \"is_inline_role\": false\n\t}]\n}"
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: custom
                        permissions:
                          type: array
                          items:
                            type: string
                            example: team
                        identifier:
                          type: string
                          example: custom
                        created_at:
                          type: string
                          example: "2023-08-01T00:00:00.000Z"
                        is_custom_role:
                          type: boolean
                          example: false
                          default: true
                        is_inline_role:
                          type: boolean
                          example: false
                          default: true
      deprecated: false
  "/v3/workplace/roles/role/{role}":
    delete:
      summary: Delete
      description: ""
      operationId: workplace_roles-delete
      parameters:
        - name: role
          in: path
          description: The role's unique identifier
          schema:
            type: string
          required: true
      responses:
        "204":
          description: "204"
          content:
            application/json:
              examples:
                Result:
                  value: ""
        "404":
          description: "404"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
    get:
      summary: Retrieve
      description: ""
      operationId: workplace_roles-get
      parameters:
        - name: role
          in: path
          description: The role's unique identifier
          schema:
            type: string
          required: true
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"role\": {\n    \"name\": \"custom\",\n    \"permissions\":
                    [\"team\"],\n    \"identifier\": \"custom\",\n    \"created_at\":
                    \"2023-08-01T00:00:00.000Z\",\n    \"is_custom_role\": false,\n
                    \   \"is_inline_role\": false\n\t}\n}"
              schema:
                type: object
                properties:
                  role:
                    type: object
                    properties:
                      name:
                        type: string
                        example: custom
                      permissions:
                        type: array
                        items:
                          type: string
                          example: team
                      identifier:
                        type: string
                        example: custom
                      created_at:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
                      is_custom_role:
                        type: boolean
                        example: false
                        default: true
                      is_inline_role:
                        type: boolean
                        example: false
                        default: true
        "404":
          description: "404"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
      deprecated: false
    patch:
      summary: Update
      description: ""
      operationId: workplace_roles-update
      parameters:
        - name: role
          in: path
          description:
            The role's unique identifier, which is the initial name the role
            was given
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the role
                permissions:
                  type: array
                  description:
                    "An array containing the permissions the role has.
                    Valid permissions are: `all_enclave_projects_admin`, `all_enclave_projects`,
                    `billing_manage`, `billing`, `create_enclave_project`, `custom_roles_manage`,
                    `ekm`, `enclave_secrets_referencing`, `logs_audit`, `logs`, `service_account_api_tokens_manage`,
                    `service_account_api_tokens`, `service_accounts_manage`, `service_accounts`,
                    `settings_manage`, `settings`, `team_manage`, `team`, `verified_domains_manage`,
                    `verified_domains`, `workplace_default_environments_manage`, `workplace_default_environments_read`,
                    `workplace_integrations_list`, `workplace_integrations_manage`,
                    `workplace_integrations_read`"
                  items:
                    type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"role\": {\n    \"name\": \"custom\",\n    \"permissions\":
                    [\"team\"],\n    \"identifier\": \"custom\",\n    \"created_at\":
                    \"2023-08-01T00:00:00.000Z\",\n    \"is_custom_role\": true,\n
                    \   \"is_inline_role\": false\n\t}\n}"
              schema:
                type: object
                properties:
                  role:
                    type: object
                    properties:
                      name:
                        type: string
                        example: custom
                      permissions:
                        type: array
                        items:
                          type: string
                          example: team
                      identifier:
                        type: string
                        example: custom
                      created_at:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
                      is_custom_role:
                        type: boolean
                        example: true
                        default: true
                      is_inline_role:
                        type: boolean
                        example: false
                        default: true
        "404":
          description: "404"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/v3/projects/roles/role/{role}":
    patch:
      summary: Update
      description: ""
      operationId: project_roles-update
      parameters:
        - name: role
          in: path
          description: The role's unique identifier
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the role
                permissions:
                  type: array
                  description:
                    "An array containing the permissions the role has.
                    Valid permissions are: `enclave_config_logs`, `enclave_project_config_secrets_read`,
                    `enclave_project_config_dynamic_secrets_read`, `enclave_project_config_dynamic_secrets_leases_write`,
                    `enclave_project_config_rotated_secrets_read`, `enclave_config_syncs_manage`,
                    `enclave_project_secrets_notes_manage`, `enclave_project_config_create`,
                    `enclave_project_config_duplicate`, `enclave_project_config_secrets_write`,
                    `enclave_project_config_service_tokens`, `enclave_project_config_trusted_ips`,
                    `enclave_project_config_logs_rollback`, `enclave_project_config_list_all`,
                    `enclave_project_pull_request_create`, `enclave_project_pull_request_respond`,
                    `enclave_project_pull_request_view`, `enclave_secret_reminders`,
                    `enclave_config_access_logs`, `enclave_project_members`, `enclave_project_rename`,
                    `enclave_project_delete`, `enclave_project_webhooks`, `enclave_project_config_dynamic_secrets_manage`,
                    `enclave_project_config_rotated_secrets_manage`, `enclave_project_config_rename`,
                    `enclave_project_config_lock`, `enclave_project_config_delete`,
                    `enclave_project_environment_list_all`, `enclave_project_environment_all`,
                    `enclave_project_environment_order`, `enclave_project_environment_create`,
                    `enclave_project_environment_delete`, `enclave_project_environment_rename`,
                    `enclave_project_environment_settings_manage`, `enclave_project_secrets_referencing`,
                    `enclave_config_secrets_referencing`"
                  items:
                    type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"role\": {\n    \"name\": \"custom\",\n    \"permissions\":
                    [\"enclave_config_logs\"],\n    \"identifier\": \"custom\",\n
                    \   \"created_at\": \"2023-08-01T00:00:00.000Z\",\n    \"is_custom_role\":
                    true\n\t}\n}"
              schema:
                type: object
                properties:
                  role:
                    type: object
                    properties:
                      name:
                        type: string
                        example: custom
                      permissions:
                        type: array
                        items:
                          type: string
                          example: enclave_config_logs
                      identifier:
                        type: string
                        example: custom
                      created_at:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
                      is_custom_role:
                        type: boolean
                        example: true
                        default: true
        "404":
          description: "404"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
    get:
      summary: Retrieve
      description: ""
      operationId: project_roles-get
      parameters:
        - name: role
          in: path
          description: The role's unique identifier
          schema:
            type: string
          required: true
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"role\": {\n    \"name\": \"custom\",\n    \"permissions\":
                    [\"enclave_config_logs\"],\n    \"identifier\": \"custom\",\n
                    \   \"created_at\": \"2023-08-01T00:00:00.000Z\",\n    \"is_custom_role\":
                    false\n\t}\n}"
              schema:
                type: object
                properties:
                  role:
                    type: object
                    properties:
                      name:
                        type: string
                        example: custom
                      permissions:
                        type: array
                        items:
                          type: string
                          example: enclave_config_logs
                      identifier:
                        type: string
                        example: custom
                      created_at:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
                      is_custom_role:
                        type: boolean
                        example: false
                        default: true
        "404":
          description: "404"
          content:
            application/json:
              examples:
                Result:
                  value: ""
      deprecated: false
    delete:
      summary: Delete
      description: ""
      operationId: project_roles-delete
      parameters:
        - name: role
          in: path
          description: The role's unique identifier
          schema:
            type: string
          required: true
      responses:
        "204":
          description: "204"
          content:
            application/json:
              examples:
                Result:
                  value: ""
        "404":
          description: "404"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/v3/workplace/permissions":
    get:
      summary: List Permissions
      description: ""
      operationId: workplace_roles-list_permissions
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "permissions": ["team"]
                    }
              schema:
                type: object
                properties:
                  permissions:
                    type: array
                    items:
                      type: string
                      example: team
      deprecated: false
  "/v3/projects/project/members":
    get:
      summary: List
      description: ""
      operationId: project_members-list
      parameters:
        - name: project
          in: query
          description: Project slug
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"members\": [{\n    \"type\": \"workplace_user\",\n
                    \   \"slug\": \"00000000-0000-0000-0000-000000000000\",\n    \"role\":
                    {\n    \t\"identifier\": \"collaborator\"\n    },\n    \"access_all_environments\":
                    false,\n    \"environments\": [\"dev\"]\n  }]\n}"
              schema:
                type: object
                properties:
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: workplace_user
                        slug:
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        role:
                          type: object
                          properties:
                            identifier:
                              type: string
                              example: collaborator
                        access_all_environments:
                          type: boolean
                          example: false
                          default: true
                        environments:
                          type: array
                          items:
                            type: string
                            example: dev
      deprecated: false
    post:
      summary: Add
      description: ""
      operationId: project_members-add
      parameters:
        - name: project
          in: query
          description: Project slug
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - slug
              properties:
                type:
                  type: string
                  enum:
                    - workplace_user
                    - group
                    - invite
                    - service_account
                slug:
                  type: string
                  description: Member's slug
                role:
                  type: string
                  description: Identifier of the project role
                environments:
                  type: array
                  description: Environment slugs to grant the member access to
                  items:
                    type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"member\": {\n    \"type\": \"workplace_user\",\n
                    \   \"slug\": \"00000000-0000-0000-0000-000000000000\",\n    \"role\":
                    {\n    \t\"identifier\": \"collaborator\"\n    },\n    \"access_all_environments\":
                    false,\n    \"environments\": [\"dev\"]\n  }\n}"
              schema:
                type: object
                properties:
                  member:
                    type: object
                    properties:
                      type:
                        type: string
                        example: workplace_user
                      slug:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      role:
                        type: object
                        properties:
                          identifier:
                            type: string
                            example: collaborator
                      access_all_environments:
                        type: boolean
                        example: false
                        default: true
                      environments:
                        type: array
                        items:
                          type: string
                          example: dev
      deprecated: false
  "/v3/workplace/invites":
    get:
      summary: List
      description: ""
      operationId: invites-list
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "invites": [{
                        "slug": "00000000-0000-0000-0000-000000000000",
                        "email": "doppler@example.com",
                        "created_at": "2023-08-01T00:00:00.000Z",
                        "workplace_role": {
                          "name": "Custom",
                          "permissions": ["team"],
                          "identifier": "custom",
                          "created_at": "2023-08-01T00:00:00.000Z",
                          "is_custom_role": false,
                          "is_inline_role": false
                        }
                      }]
                    }
              schema:
                type: object
                properties:
                  invites:
                    type: array
                    items:
                      type: object
                      properties:
                        slug:
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        email:
                          type: string
                          example: doppler@example.com
                        created_at:
                          type: string
                          example: "2023-08-01T00:00:00.000Z"
                        workplace_role:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Custom
                            permissions:
                              type: array
                              items:
                                type: string
                                example: team
                            identifier:
                              type: string
                              example: custom
                            created_at:
                              type: string
                              example: "2023-08-01T00:00:00.000Z"
                            is_custom_role:
                              type: boolean
                              example: false
                              default: true
                            is_inline_role:
                              type: boolean
                              example: false
                              default: true
      deprecated: false
  "/v3/projects/roles":
    get:
      summary: List
      description: ""
      operationId: project_roles-list
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"roles\": [{\n    \"name\": \"custom\",\n    \"permissions\":
                    [\"enclave_config_logs\"],\n    \"identifier\": \"custom\",\n
                    \   \"created_at\": \"2023-08-01T00:00:00.000Z\",\n    \"is_custom_role\":
                    false\n\t}]\n}"
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: custom
                        permissions:
                          type: array
                          items:
                            type: string
                            example: enclave_config_logs
                        identifier:
                          type: string
                          example: custom
                        created_at:
                          type: string
                          example: "2023-08-01T00:00:00.000Z"
                        is_custom_role:
                          type: boolean
                          example: false
                          default: true
      deprecated: false
    post:
      summary: Create
      description: ""
      operationId: project_roles-create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - permissions
              properties:
                name:
                  type: string
                  description: The name of the role
                permissions:
                  type: array
                  description:
                    "An array containing the permissions the role has.
                    Valid permissions are: `enclave_config_logs`, `enclave_project_config_secrets_read`,
                    `enclave_project_config_dynamic_secrets_read`, `enclave_project_config_dynamic_secrets_leases_write`,
                    `enclave_project_config_rotated_secrets_read`, `enclave_config_syncs_manage`,
                    `enclave_project_secrets_notes_manage`, `enclave_project_config_create`,
                    `enclave_project_config_duplicate`, `enclave_project_config_secrets_write`,
                    `enclave_project_config_service_tokens`, `enclave_project_config_trusted_ips`,
                    `enclave_project_config_logs_rollback`, `enclave_project_config_list_all`,
                    `enclave_project_pull_request_create`, `enclave_project_pull_request_respond`,
                    `enclave_project_pull_request_view`, `enclave_secret_reminders`,
                    `enclave_config_access_logs`, `enclave_project_members`, `enclave_project_rename`,
                    `enclave_project_delete`, `enclave_project_webhooks`, `enclave_project_config_dynamic_secrets_manage`,
                    `enclave_project_config_rotated_secrets_manage`, `enclave_project_config_rename`,
                    `enclave_project_config_lock`, `enclave_project_config_delete`,
                    `enclave_project_environment_list_all`, `enclave_project_environment_all`,
                    `enclave_project_environment_order`, `enclave_project_environment_create`,
                    `enclave_project_environment_delete`, `enclave_project_environment_rename`,
                    `enclave_project_environment_settings_manage`, `enclave_project_secrets_referencing`,
                    `enclave_config_secrets_referencing`"
                  items:
                    type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"role\": {\n    \"name\": \"custom\",\n    \"permissions\":
                    [\"enclave_config_logs\"],\n    \"identifier\": \"custom\",\n
                    \   \"created_at\": \"2023-08-01T00:00:00.000Z\",\n    \"is_custom_role\":
                    true\n\t}\n}"
              schema:
                type: object
                properties:
                  role:
                    type: object
                    properties:
                      name:
                        type: string
                        example: custom
                      permissions:
                        type: array
                        items:
                          type: string
                          example: enclave_config_logs
                      identifier:
                        type: string
                        example: custom
                      created_at:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
                      is_custom_role:
                        type: boolean
                        example: true
                        default: true
      deprecated: false
  "/v3/projects/project/members/member/{type}/{slug}":
    delete:
      summary: Delete
      description: ""
      operationId: project_members-delete
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - workplace_user
              - group
              - invite
              - service_account
        - name: slug
          in: path
          description: Member's slug
          required: true
          schema:
            type: string
        - name: project
          in: query
          description: Project slug
          required: true
          schema:
            type: string
      responses:
        "204":
          description: "204"
          content:
            application/json:
              examples:
                Result:
                  value: ""
      deprecated: false
    get:
      summary: Retrieve
      description: ""
      operationId: project_members-get
      parameters:
        - name: project
          in: query
          description: Project slug
          required: true
          schema:
            type: string
        - name: type
          in: path
          schema:
            type: string
            enum:
              - workplace_user
              - group
              - invite
              - service_account
          required: true
        - name: slug
          in: path
          description: Member's slug
          schema:
            type: string
          required: true
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"member\": {\n    \"type\": \"workplace_user\",\n
                    \   \"slug\": \"00000000-0000-0000-0000-000000000000\",\n    \"role\":
                    {\n    \t\"identifier\": \"collaborator\"\n    },\n    \"access_all_environments\":
                    false,\n    \"environments\": [\"dev\"]\n  }\n}"
              schema:
                type: object
                properties:
                  member:
                    type: object
                    properties:
                      type:
                        type: string
                        example: workplace_user
                      slug:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      role:
                        type: object
                        properties:
                          identifier:
                            type: string
                            example: collaborator
                      access_all_environments:
                        type: boolean
                        example: false
                        default: true
                      environments:
                        type: array
                        items:
                          type: string
                          example: dev
      deprecated: false
    patch:
      summary: Update
      description: ""
      operationId: project_members-update
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - workplace_user
              - group
              - invite
              - service_account
        - name: slug
          in: path
          description: Member's slug
          required: true
          schema:
            type: string
        - name: project
          in: query
          description: Project slug
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: Identifier of the project role
                environments:
                  type: array
                  description: Environment slugs to grant the member access to
                  items:
                    type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"member\": {\n    \"type\": \"workplace_user\",\n
                    \   \"slug\": \"00000000-0000-0000-0000-000000000000\",\n    \"role\":
                    {\n    \t\"identifier\": \"collaborator\"\n    },\n    \"access_all_environments\":
                    false,\n    \"environments\": [\"dev\"]\n  }\n}"
              schema:
                type: object
                properties:
                  member:
                    type: object
                    properties:
                      type:
                        type: string
                        example: workplace_user
                      slug:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      role:
                        type: object
                        properties:
                          identifier:
                            type: string
                            example: collaborator
                      access_all_environments:
                        type: boolean
                        example: false
                        default: true
                      environments:
                        type: array
                        items:
                          type: string
                          example: dev
      deprecated: false
  "/v3/workplace/service_accounts/service_account/{slug}":
    get:
      summary: Retrieve
      description: ""
      operationId: service_accounts-get
      parameters:
        - name: slug
          in: path
          description: Slug of the service account
          schema:
            type: string
          required: true
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "service_account": {
                        "name": "sa",
                        "slug": "00000000-0000-0000-0000-000000000000",
                        "created_at": "2023-08-01T00:00:00.000Z",
                        "workplace_role": {
                          "name": "Custom",
                          "permissions": ["team"],
                          "identifier": "custom",
                          "created_at": "2023-08-01T00:00:00.000Z",
                          "is_custom_role": false,
                          "is_inline_role": false
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  service_account:
                    type: object
                    properties:
                      name:
                        type: string
                        example: sa
                      slug:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      created_at:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
                      workplace_role:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Custom
                          permissions:
                            type: array
                            items:
                              type: string
                              example: team
                          identifier:
                            type: string
                            example: custom
                          created_at:
                            type: string
                            example: "2023-08-01T00:00:00.000Z"
                          is_custom_role:
                            type: boolean
                            example: false
                            default: true
                          is_inline_role:
                            type: boolean
                            example: false
                            default: true
        "404":
          description: "404"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
      deprecated: false
    delete:
      summary: Delete
      description: ""
      operationId: service_accounts-delete
      parameters:
        - name: slug
          in: path
          description: Slug of the service account
          schema:
            type: string
          required: true
      responses:
        "204":
          description: "204"
          content:
            application/json:
              examples:
                Result:
                  value: ""
        "404":
          description: "404"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
      deprecated: false
    patch:
      summary: Update
      description: ""
      operationId: service_accounts-update
      parameters:
        - name: slug
          in: path
          description: Slug of the service account
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                workplace_role:
                  type: object
                  description:
                    You may provide an identifier OR permissions, but not
                    both
                  properties:
                    identifier:
                      type: string
                      description: Identifier of an existing workplace role
                    permissions:
                      type: array
                      description: Workplace permissions to grant
                      items:
                        type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "service_account": {
                        "name": "sa",
                        "slug": "00000000-0000-0000-0000-000000000000",
                        "created_at": "2023-08-01T00:00:00.000Z",
                        "workplace_role": {
                          "name": "None",
                          "permissions": [],
                          "identifier": "no_access",
                          "created_at": "2023-08-01T00:00:00.000Z",
                          "is_custom_role": false,
                          "is_inline_role": false
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  service_account:
                    type: object
                    properties:
                      name:
                        type: string
                        example: sa
                      slug:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      created_at:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
                      workplace_role:
                        type: object
                        properties:
                          name:
                            type: string
                            example: None
                          permissions:
                            type: array
                            items:
                              type: string
                          identifier:
                            type: string
                            example: no_access
                          created_at:
                            type: string
                            example: "2023-08-01T00:00:00.000Z"
                          is_custom_role:
                            type: boolean
                            example: false
                            default: true
                          is_inline_role:
                            type: boolean
                            example: false
                            default: true
        "404":
          description: "404"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
      deprecated: false
  "/v3/projects/permissions":
    get:
      summary: List Permissions
      description: ""
      operationId: project_roles-list_permissions
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "permissions": ["enclave_config_logs"]
                    }
              schema:
                type: object
                properties:
                  permissions:
                    type: array
                    items:
                      type: string
                      example: enclave_config_logs
      deprecated: false
  "/v3/workplace/groups/group/{slug}":
    get:
      summary: Retrieve
      description: ""
      operationId: groups-get
      parameters:
        - name: slug
          in: path
          description: The group's slug
          schema:
            type: string
          required: true
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"group\": {\n    \"name\": \"group\",\n    \"slug\":
                    \"00000000-0000-0000-0000-000000000000\",\n    \"created_at\":
                    \"2023-08-01T00:00:00.000Z\",\n    \"default_project_role\": {\n
                    \     \"identifier\": \"no_access\"\n    },\n    \"projects\":
                    [{\n    \t\"name\": \"Project\",\n      \"slug\": \"project\",\n
                    \     \"role\": {\n        \"identifier\": \"viewer\"\n      }\n
                    \   }],\n    \"members\": [{\n      \"type\": \"workplace_user\",\n
                    \     \"slug\": \"00000000-0000-0000-0000-000000000000\"\n    }]\n
                    \ }\n}"
              schema:
                type: object
                properties:
                  group:
                    type: object
                    properties:
                      name:
                        type: string
                        example: group
                      slug:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      created_at:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
                      default_project_role:
                        type: object
                        properties:
                          identifier:
                            type: string
                            example: no_access
                      projects:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Project
                            slug:
                              type: string
                              example: project
                            role:
                              type: object
                              properties:
                                identifier:
                                  type: string
                                  example: viewer
                      members:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: workplace_user
                            slug:
                              type: string
                              example: 00000000-0000-0000-0000-000000000000
        "404":
          description: "404"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
      deprecated: false
    delete:
      summary: Delete
      description: ""
      operationId: groups-delete
      parameters:
        - name: slug
          in: path
          description: The group's slug
          schema:
            type: string
          required: true
      responses:
        "204":
          description: "204"
          content:
            application/json:
              examples:
                Result:
                  value: ""
      deprecated: false
    patch:
      summary: Update
      description: ""
      operationId: groups-update
      parameters:
        - name: slug
          in: path
          description: The group's slug
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                default_project_role:
                  type: string
                  description: Identifier of the project role
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"group\": {\n    \"name\": \"group\",\n    \"slug\":
                    \"00000000-0000-0000-0000-000000000000\",\n    \"created_at\":
                    \"2023-08-01T00:00:00.000Z\",\n    \"default_project_role\": {\n
                    \     \"identifier\": \"no_access\"\n    },\n    \"projects\":
                    [{\n    \t\"name\": \"Project\",\n      \"slug\": \"project\",\n
                    \     \"role\": {\n        \"identifier\": \"viewer\"\n      }\n
                    \   }],\n    \"members\": [{\n      \"type\": \"workplace_user\",\n
                    \     \"slug\": \"00000000-0000-0000-0000-000000000000\"\n    }]\n
                    \ }\n}"
              schema:
                type: object
                properties:
                  group:
                    type: object
                    properties:
                      name:
                        type: string
                        example: group
                      slug:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      created_at:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
                      default_project_role:
                        type: object
                        properties:
                          identifier:
                            type: string
                            example: no_access
                      projects:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Project
                            slug:
                              type: string
                              example: project
                            role:
                              type: object
                              properties:
                                identifier:
                                  type: string
                                  example: viewer
                      members:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: workplace_user
                            slug:
                              type: string
                              example: 00000000-0000-0000-0000-000000000000
        "404":
          description: "404"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
      deprecated: false
  "/v3/workplace/service_accounts":
    get:
      summary: List
      description: ""
      operationId: service_accounts-list
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "service_accounts": [{
                        "name": "sa",
                        "slug": "00000000-0000-0000-0000-000000000000",
                        "created_at": "2023-08-01T00:00:00.000Z",
                        "workplace_role": {
                          "name": "Custom",
                          "permissions": ["team"],
                          "identifier": "custom",
                          "created_at": "2023-08-01T00:00:00.000Z",
                          "is_custom_role": false,
                          "is_inline_role": false
                        }
                      }]
                    }
              schema:
                type: object
                properties:
                  service_accounts:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: sa
                        slug:
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        created_at:
                          type: string
                          example: "2023-08-01T00:00:00.000Z"
                        workplace_role:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Custom
                            permissions:
                              type: array
                              items:
                                type: string
                                example: team
                            identifier:
                              type: string
                              example: custom
                            created_at:
                              type: string
                              example: "2023-08-01T00:00:00.000Z"
                            is_custom_role:
                              type: boolean
                              example: false
                              default: true
                            is_inline_role:
                              type: boolean
                              example: false
                              default: true
      deprecated: false
    post:
      summary: Create
      description: ""
      operationId: service_accounts-create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                workplace_role:
                  type: object
                  description:
                    You may provide an identifier OR permissions, but not
                    both
                  properties:
                    identifier:
                      type: string
                      description: Identifier of an existing workplace role
                    permissions:
                      type: array
                      description: Workplace permissions to grant
                      items:
                        type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "service_account": {
                        "name": "sa",
                        "slug": "00000000-0000-0000-0000-000000000000",
                        "created_at": "2023-08-01T00:00:00.000Z",
                        "workplace_role": {
                          "name": "Custom",
                          "permissions": ["team"],
                          "identifier": "custom",
                          "created_at": "2023-08-01T00:00:00.000Z",
                          "is_custom_role": false,
                          "is_inline_role": false
                        }
                      }
                    }
              schema:
                type: object
                properties:
                  service_account:
                    type: object
                    properties:
                      name:
                        type: string
                        example: sa
                      slug:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      created_at:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
                      workplace_role:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Custom
                          permissions:
                            type: array
                            items:
                              type: string
                              example: team
                          identifier:
                            type: string
                            example: custom
                          created_at:
                            type: string
                            example: "2023-08-01T00:00:00.000Z"
                          is_custom_role:
                            type: boolean
                            example: false
                            default: true
                          is_inline_role:
                            type: boolean
                            example: false
                            default: true
      deprecated: false
  "/v3/workplace/groups":
    post:
      summary: Create
      description: ""
      operationId: groups-create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                default_project_role:
                  type: string
                  description: Identifier of the project role
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"group\": {\n    \"name\": \"group\",\n    \"slug\":
                    \"00000000-0000-0000-0000-000000000000\",\n    \"created_at\":
                    \"2023-08-01T00:00:00.000Z\",\n    \"default_project_role\": {\n
                    \     \"identifier\": \"no_access\"\n    },\n    \"projects\":
                    [{\n    \t\"name\": \"Project\",\n      \"slug\": \"project\",\n
                    \     \"role\": {\n        \"identifier\": \"viewer\"\n      }\n
                    \   }],\n    \"members\": [{\n      \"type\": \"workplace_user\",\n
                    \     \"slug\": \"00000000-0000-0000-0000-000000000000\"\n    }]\n
                    \ }\n}"
              schema:
                type: object
                properties:
                  group:
                    type: object
                    properties:
                      name:
                        type: string
                        example: group
                      slug:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      created_at:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
                      default_project_role:
                        type: object
                        properties:
                          identifier:
                            type: string
                            example: no_access
                      projects:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Project
                            slug:
                              type: string
                              example: project
                            role:
                              type: object
                              properties:
                                identifier:
                                  type: string
                                  example: viewer
                      members:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: workplace_user
                            slug:
                              type: string
                              example: 00000000-0000-0000-0000-000000000000
        "404":
          description: "404"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
      deprecated: false
    get:
      summary: List
      description: ""
      operationId: groups-list
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "groups": [{
                        "name": "group",
                        "slug": "00000000-0000-0000-0000-000000000000",
                        "created_at": "2023-08-01T00:00:00.000Z",
                        "default_project_role": {
                          "identifier": "no_access"
                        }
                      }]
                    }
              schema:
                type: object
                properties:
                  groups:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: group
                        slug:
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        created_at:
                          type: string
                          example: "2023-08-01T00:00:00.000Z"
                        default_project_role:
                          type: object
                          properties:
                            identifier:
                              type: string
                              example: no_access
      deprecated: false
  "/v3/workplace/groups/group/{slug}/members/{type}/{member_slug}":
    delete:
      summary: Delete Member
      description: ""
      operationId: groups-delete_member
      parameters:
        - name: slug
          in: path
          description: The group's slug
          schema:
            type: string
          required: true
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - workplace_user
        - name: member_slug
          in: path
          description: The member's slug
          required: true
          schema:
            type: string
      responses:
        "204":
          description: "204"
          content:
            application/json:
              examples:
                Result:
                  value: ""
      deprecated: false
  "/v3/workplace/users":
    get:
      summary: List
      description: Get all users within a workplace
      operationId: users-list
      parameters:
        - name: page
          in: query
          description: The page of users to fetch
          schema:
            type: integer
            format: int32
            default: 1
        - name: email
          in: query
          description:
            Filter results to only include the user with the provided email
            address
          schema:
            type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "workplace_users": [
                        {
                          "id": "45786c9a-8c97-4f5b-a35b-ce941796502b",
                          "access": "owner",
                          "created_at": "2020-09-01T23:57:27.052Z",
                          "user": {
                            "email": "test@example.com",
                            "name": "John Appleseed",
                            "username": "john",
                            "profile_image_url": ""
                          }
                        }
                      ],
                      "page": 1,
                      "success": true
                    }
              schema:
                type: object
                properties:
                  workplace_users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 45786c9a-8c97-4f5b-a35b-ce941796502b
                        access:
                          type: string
                          example: owner
                        created_at:
                          type: string
                          example: "2020-09-01T23:57:27.052Z"
                        user:
                          type: object
                          properties:
                            email:
                              type: string
                              example: test@example.com
                            name:
                              type: string
                              example: John Appleseed
                            username:
                              type: string
                              example: john
                            profile_image_url:
                              type: string
                              example: ""
                  page:
                    type: integer
                    example: 1
                    default: 0
                  success:
                    type: boolean
                    example: true
                    default: true
      deprecated: false
  "/v3/workplace/groups/group/{slug}/members":
    post:
      summary: Add Member
      description: ""
      operationId: groups-add_member
      parameters:
        - name: slug
          in: path
          description: The group's slug
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - slug
              properties:
                type:
                  type: string
                  enum:
                    - workplace_user
                slug:
                  type: string
                  description: The member's slug
      responses:
        "204":
          description: "204"
          content:
            application/json:
              examples:
                Result:
                  value: ""
        "409":
          description: "409"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
      deprecated: false
  "/v3/workplace/users/{slug}":
    get:
      summary: Retrieve
      description: Get a specific user in a workplace
      operationId: users-get
      parameters:
        - name: slug
          in: path
          description: The slug of the workplace user
          schema:
            type: string
          required: true
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "workplace_user": {
                        "id": "9629f890-eb33-426c-8694-28ce363b44f0",
                        "access": "owner",
                        "created_at": "2021-01-08T02:43:20.524Z",
                        "user": {
                          "email": "test@example.com",
                          "name": "John Appleseed",
                          "username": "john",
                          "profile_image_url": ""
                        }
                      },
                      "success": true
                    }
              schema:
                type: object
                properties:
                  workplace_user:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 9629f890-eb33-426c-8694-28ce363b44f0
                      access:
                        type: string
                        example: owner
                      created_at:
                        type: string
                        example: "2021-01-08T02:43:20.524Z"
                      user:
                        type: object
                        properties:
                          email:
                            type: string
                            example: test@example.com
                          name:
                            type: string
                            example: John Appleseed
                          username:
                            type: string
                            example: john
                          profile_image_url:
                            type: string
                            example: ""
                  success:
                    type: boolean
                    example: true
                    default: true
      deprecated: false
  "/v3/integrations/integration/options":
    get:
      summary: Get Options
      description: ""
      operationId: get-options
      parameters:
        - name: integration
          in: query
          description: The integration slug
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/v3/workplace/groups/group/{group_slug}/members/{member_type}/{member_slug}":
    get:
      summary: Retrieve Member
      description: ""
      operationId: retrieve-member
      parameters:
        - name: group_slug
          in: path
          description: The group's slug
          schema:
            type: string
          required: true
        - name: member_type
          in: path
          schema:
            type: string
            enum:
              - workplace_user
          required: true
        - name: member_slug
          in: path
          description: The member's slug
          schema:
            type: string
          required: true
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{\n  \"group\": {\n    \"name\": \"group\",\n    \"slug\":
                    \"00000000-0000-0000-0000-000000000000\",\n    \"created_at\":
                    \"2023-08-01T00:00:00.000Z\",\n    \"default_project_role\": {\n
                    \     \"identifier\": \"no_access\"\n    },\n    \"projects\":
                    [{\n    \t\"name\": \"Project\",\n      \"slug\": \"project\",\n
                    \     \"role\": {\n        \"identifier\": \"viewer\"\n      }\n
                    \   }],\n    \"members\": [{\n      \"type\": \"workplace_user\",\n
                    \     \"slug\": \"00000000-0000-0000-0000-000000000000\"\n    }]\n
                    \ }\n}"
              schema:
                type: object
                properties:
                  group:
                    type: object
                    properties:
                      name:
                        type: string
                        example: group
                      slug:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      created_at:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
                      default_project_role:
                        type: object
                        properties:
                          identifier:
                            type: string
                            example: no_access
                      projects:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Project
                            slug:
                              type: string
                              example: project
                            role:
                              type: object
                              properties:
                                identifier:
                                  type: string
                                  example: viewer
                      members:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: workplace_user
                            slug:
                              type: string
                              example: 00000000-0000-0000-0000-000000000000
        "404":
          description: "404"
          content:
            text/plain:
              examples:
                Result:
                  value: ""
      deprecated: false
  "/v3/webhooks":
    get:
      summary: List
      description: Webhooks
      operationId: webhooks-list
      parameters:
        - name: project
          in: query
          description: The project's name
          schema:
            type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
    post:
      summary: Add
      description: Webhook
      operationId: webhooks-add
      parameters:
        - name: project
          in: query
          description: The project's name
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                url:
                  type: string
                  description: The webhook URL. Must be https
                secret:
                  type: string
                  description: "See: https://docs.doppler.com/docs/webhooks#verify-webhook-with-request-signing"
                authentication:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - None
                        - Bearer
                        - Basic
                    token:
                      type: string
                      description: Used when type = Bearer
                    username:
                      type: string
                      description: Used when type = Basic
                    password:
                      type: string
                      description: Used when type = Basic
                payload:
                  type: string
                  description: "See: https://docs.doppler.com/docs/webhooks#default-payload"
                  format: json
                enableConfigs:
                  type: array
                  description: Config slugs that the webhook should be enabled for
                  items:
                    type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/v3/webhooks/webhook/{slug}":
    get:
      summary: Retrieve
      description: Webhook
      operationId: webhooks-get
      parameters:
        - name: slug
          in: path
          description: Webhook's slug
          schema:
            type: string
          required: true
        - name: project
          in: query
          description: The project's name
          schema:
            type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update
      description: Webhook
      operationId: webhooks-update
      parameters:
        - name: project
          in: query
          description: The project's name
          schema:
            type: string
        - name: slug
          in: path
          description: Webhook's slug
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: The webhook URL. Must be https
                secret:
                  type: string
                  description: "See: https://docs.doppler.com/docs/webhooks#verify-webhook-with-request-signing"
                authentication:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - None
                        - Bearer
                        - Basic
                    token:
                      type: string
                      description: Used when type = Bearer
                    username:
                      type: string
                      description: Used when type = Basic
                    password:
                      type: string
                      description: Used when type = Basic
                payload:
                  type: string
                  description: "See: https://docs.doppler.com/docs/webhooks#default-payload"
                  format: json
                enableConfigs:
                  type: array
                  description: Config slugs that the webhook should be enabled for
                  items:
                    type: string
                disableConfigs:
                  type: array
                  description: Config slugs that the webhook should be disabled for
                  items:
                    type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
    delete:
      summary: Delete
      description: Webhook
      operationId: webhooks-delete
      parameters:
        - name: project
          in: query
          description: The project's name
          schema:
            type: string
        - name: slug
          in: path
          description: Webhook's slug
          schema:
            type: string
          required: true
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/v3/webhooks/webhook/{slug}/enable":
    post:
      summary: Enable
      description: Webhook
      operationId: webhooks-enable
      parameters:
        - name: project
          in: query
          description: The project's name
          schema:
            type: string
        - name: slug
          in: path
          description: Webhook's slug
          schema:
            type: string
          required: true
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/v3/webhooks/webhook/{slug}/disable":
    post:
      summary: Disable
      description: Webhook
      operationId: webhooks-disable
      parameters:
        - name: project
          in: query
          description: The project's name
          schema:
            type: string
        - name: slug
          in: path
          description: Webhook's slug
          schema:
            type: string
          required: true
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
        "400":
          description: "400"
          content:
            application/json:
              examples:
                Result:
                  value: "{}"
              schema:
                type: object
                properties: {}
      deprecated: false
  "/v3/workplace/service_accounts/service_account/{service_account}/tokens":
    get:
      summary: List
      description: List information about existing service account API tokens.
      operationId: service_account_tokens-list
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            format: int32
            default: 20
        - name: service_account
          in: path
          description: Slug of the service account
          schema:
            type: string
          required: true
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "api_tokens": [{
                        "name": "token",
                        "slug": "00000000-0000-0000-0000-000000000000",
                        "created_at": "2023-08-01T00:00:00.000Z",
                        "last_seen_at": "2024-01-05T00:00:00.000Z",
                        "expires_at": "2024-02-01T00:00:00.000Z"
                      }],
                      "success": true
                    }
              schema:
                type: object
                properties:
                  api_tokens:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: token
                        slug:
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        created_at:
                          type: string
                          example: "2023-08-01T00:00:00.000Z"
                        last_seen_at:
                          type: string
                          example: "2024-01-05T00:00:00.000Z"
                        expires_at:
                          type: string
                          example: "2024-02-01T00:00:00.000Z"
                  success:
                    type: boolean
                    example: true
                    default: true
      deprecated: false
    post:
      summary: Create
      description: Generate a new service account API token.
      operationId: service_account_tokens-create
      parameters:
        - name: service_account
          in: path
          description: Slug of the service account
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The display name of the API token
                expires_at:
                  type: string
                  description:
                    The datetime at which the API token should expire.
                    If not provided, the API token will remain vaild indefinitely
                    unless manually revoked
                  format: date-time
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "api_token": {
                        "name": "token",
                        "slug": "00000000-0000-0000-0000-000000000000",
                        "created_at": "2023-03-14T00:00:00.000Z",
                        "last_seen_at": null,
                        "expires_at": "2023-08-01T00:00:00.000Z"
                      },
                      "api_key": "dp.sa.0000000000000000000000000000",
                      "success": true
                    }
              schema:
                type: object
                properties:
                  api_token:
                    type: object
                    properties:
                      name:
                        type: string
                        example: token
                      slug:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      created_at:
                        type: string
                        example: "2023-03-14T00:00:00.000Z"
                      last_seen_at:
                        type: string
                      expires_at:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
                  api_key:
                    type: string
                    example: dp.sa.0000000000000000000000000000
                  success:
                    type: boolean
                    example: true
                    default: true
      deprecated: false
  "/v3/workplace/service_accounts/service_account/{service_account}/tokens/token/{api_token}":
    get:
      summary: Retrieve
      description: Retrieve information about a single service account API token.
      operationId: service_account_tokens-get
      parameters:
        - name: service_account
          in: path
          description: Slug of the service account
          schema:
            type: string
          required: true
        - name: api_token
          in: path
          description: Slug of the API token
          schema:
            type: string
          required: true
      responses:
        "200":
          description: "200"
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "api_token": {
                        "name": "token",
                        "slug": "00000000-0000-0000-0000-000000000000",
                        "created_at": "2023-03-14T00:00:00.000Z",
                        "last_seen_at": "2023-06-22T00:00:00.000Z",
                        "expires_at": "2023-08-01T00:00:00.000Z"
                      },
                      "success": true
                    }
              schema:
                type: object
                properties:
                  api_token:
                    type: object
                    properties:
                      name:
                        type: string
                        example: token
                      slug:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      created_at:
                        type: string
                        example: "2023-03-14T00:00:00.000Z"
                      last_seen_at:
                        type: string
                        example: "2023-06-22T00:00:00.000Z"
                      expires_at:
                        type: string
                        example: "2023-08-01T00:00:00.000Z"
                  success:
                    type: boolean
                    example: true
                    default: true
        "404":
          description: "404"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{ \n  \"messages\": [\"Service account API token does not
                    exist\"], \n  \"success\": false \n}"
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: string
                      example: Service account API token does not exist
                  success:
                    type: boolean
                    example: false
                    default: true
      deprecated: false
    delete:
      summary: Delete
      description: Revoke an existing service account API token.
      operationId: service_account_tokens-delete
      parameters:
        - name: service_account
          in: path
          description: Slug of the service account
          schema:
            type: string
          required: true
        - name: api_token
          in: path
          description: Slug of the API token
          schema:
            type: string
          required: true
      responses:
        "204":
          description: "204"
          content:
            application/json:
              examples:
                Result:
                  value: ""
        "404":
          description: "404"
          content:
            application/json:
              examples:
                Result:
                  value:
                    "{ \n  \"messages\": [\"Service account API token does not
                    exist\"], \n  \"success\": false \n}"
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: string
                      example: Service account API token does not exist
                  success:
                    type: boolean
                    example: false
                    default: true
      deprecated: false
x-readme:
  headers: []
  explorer-enabled: true
  proxy-enabled: false
x-readme-fauxas: true
