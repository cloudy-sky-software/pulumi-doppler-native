// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupProjectMember(ctx *pulumi.Context, args *LookupProjectMemberArgs, opts ...pulumi.InvokeOption) (*LookupProjectMemberResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProjectMemberResult
	err := ctx.Invoke("doppler-native:projects/v3:getProjectMember", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupProjectMemberArgs struct {
	// Member's slug
	Slug string `pulumi:"slug"`
	Type string `pulumi:"type"`
}

type LookupProjectMemberResult struct {
	Member *GetProjectMemberPropertiesMemberProperties `pulumi:"member"`
}

// Defaults sets the appropriate defaults for LookupProjectMemberResult
func (val *LookupProjectMemberResult) Defaults() *LookupProjectMemberResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Member = tmp.Member.Defaults()

	return &tmp
}
func LookupProjectMemberOutput(ctx *pulumi.Context, args LookupProjectMemberOutputArgs, opts ...pulumi.InvokeOption) LookupProjectMemberResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupProjectMemberResultOutput, error) {
			args := v.(LookupProjectMemberArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("doppler-native:projects/v3:getProjectMember", args, LookupProjectMemberResultOutput{}, options).(LookupProjectMemberResultOutput), nil
		}).(LookupProjectMemberResultOutput)
}

type LookupProjectMemberOutputArgs struct {
	// Member's slug
	Slug pulumi.StringInput `pulumi:"slug"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (LookupProjectMemberOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectMemberArgs)(nil)).Elem()
}

type LookupProjectMemberResultOutput struct{ *pulumi.OutputState }

func (LookupProjectMemberResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectMemberResult)(nil)).Elem()
}

func (o LookupProjectMemberResultOutput) ToLookupProjectMemberResultOutput() LookupProjectMemberResultOutput {
	return o
}

func (o LookupProjectMemberResultOutput) ToLookupProjectMemberResultOutputWithContext(ctx context.Context) LookupProjectMemberResultOutput {
	return o
}

func (o LookupProjectMemberResultOutput) Member() GetProjectMemberPropertiesMemberPropertiesPtrOutput {
	return o.ApplyT(func(v LookupProjectMemberResult) *GetProjectMemberPropertiesMemberProperties { return v.Member }).(GetProjectMemberPropertiesMemberPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectMemberResultOutput{})
}
