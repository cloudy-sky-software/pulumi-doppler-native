// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListProjectMembers(ctx *pulumi.Context, args *ListProjectMembersArgs, opts ...pulumi.InvokeOption) (*ListProjectMembersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListProjectMembersResult
	err := ctx.Invoke("doppler-native:projects/v3:listProjectMembers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListProjectMembersArgs struct {
}

type ListProjectMembersResult struct {
	Members []ListProjectMembersPropertiesMembersItemProperties `pulumi:"members"`
}

func ListProjectMembersOutput(ctx *pulumi.Context, args ListProjectMembersOutputArgs, opts ...pulumi.InvokeOption) ListProjectMembersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListProjectMembersResultOutput, error) {
			args := v.(ListProjectMembersArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListProjectMembersResult
			secret, err := ctx.InvokePackageRaw("doppler-native:projects/v3:listProjectMembers", args, &rv, "", opts...)
			if err != nil {
				return ListProjectMembersResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListProjectMembersResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListProjectMembersResultOutput), nil
			}
			return output, nil
		}).(ListProjectMembersResultOutput)
}

type ListProjectMembersOutputArgs struct {
}

func (ListProjectMembersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListProjectMembersArgs)(nil)).Elem()
}

type ListProjectMembersResultOutput struct{ *pulumi.OutputState }

func (ListProjectMembersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListProjectMembersResult)(nil)).Elem()
}

func (o ListProjectMembersResultOutput) ToListProjectMembersResultOutput() ListProjectMembersResultOutput {
	return o
}

func (o ListProjectMembersResultOutput) ToListProjectMembersResultOutputWithContext(ctx context.Context) ListProjectMembersResultOutput {
	return o
}

func (o ListProjectMembersResultOutput) Members() ListProjectMembersPropertiesMembersItemPropertiesArrayOutput {
	return o.ApplyT(func(v ListProjectMembersResult) []ListProjectMembersPropertiesMembersItemProperties { return v.Members }).(ListProjectMembersPropertiesMembersItemPropertiesArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListProjectMembersResultOutput{})
}
