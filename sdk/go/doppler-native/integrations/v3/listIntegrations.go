// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListIntegrations(ctx *pulumi.Context, args *ListIntegrationsArgs, opts ...pulumi.InvokeOption) (*ListIntegrationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListIntegrationsResult
	err := ctx.Invoke("doppler-native:integrations/v3:listIntegrations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type ListIntegrationsArgs struct {
}

type ListIntegrationsResult struct {
	Integrations []ListIntegrationsPropertiesIntegrationsItemProperties `pulumi:"integrations"`
	Success      *bool                                                  `pulumi:"success"`
}

// Defaults sets the appropriate defaults for ListIntegrationsResult
func (val *ListIntegrationsResult) Defaults() *ListIntegrationsResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Success == nil {
		success_ := true
		tmp.Success = &success_
	}
	return &tmp
}

func ListIntegrationsOutput(ctx *pulumi.Context, args ListIntegrationsOutputArgs, opts ...pulumi.InvokeOption) ListIntegrationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListIntegrationsResultOutput, error) {
			args := v.(ListIntegrationsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListIntegrationsResult
			secret, err := ctx.InvokePackageRaw("doppler-native:integrations/v3:listIntegrations", args, &rv, "", opts...)
			if err != nil {
				return ListIntegrationsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListIntegrationsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListIntegrationsResultOutput), nil
			}
			return output, nil
		}).(ListIntegrationsResultOutput)
}

type ListIntegrationsOutputArgs struct {
}

func (ListIntegrationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListIntegrationsArgs)(nil)).Elem()
}

type ListIntegrationsResultOutput struct{ *pulumi.OutputState }

func (ListIntegrationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListIntegrationsResult)(nil)).Elem()
}

func (o ListIntegrationsResultOutput) ToListIntegrationsResultOutput() ListIntegrationsResultOutput {
	return o
}

func (o ListIntegrationsResultOutput) ToListIntegrationsResultOutputWithContext(ctx context.Context) ListIntegrationsResultOutput {
	return o
}

func (o ListIntegrationsResultOutput) Integrations() ListIntegrationsPropertiesIntegrationsItemPropertiesArrayOutput {
	return o.ApplyT(func(v ListIntegrationsResult) []ListIntegrationsPropertiesIntegrationsItemProperties {
		return v.Integrations
	}).(ListIntegrationsPropertiesIntegrationsItemPropertiesArrayOutput)
}

func (o ListIntegrationsResultOutput) Success() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ListIntegrationsResult) *bool { return v.Success }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ListIntegrationsResultOutput{})
}
