// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListWorkplaceRoles(ctx *pulumi.Context, args *ListWorkplaceRolesArgs, opts ...pulumi.InvokeOption) (*ListWorkplaceRolesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListWorkplaceRolesResult
	err := ctx.Invoke("doppler-native:workplace/v3:listWorkplaceRoles", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListWorkplaceRolesArgs struct {
}

type ListWorkplaceRolesResult struct {
	Roles []ListWorkplaceRolesPropertiesRolesItemProperties `pulumi:"roles"`
}

func ListWorkplaceRolesOutput(ctx *pulumi.Context, args ListWorkplaceRolesOutputArgs, opts ...pulumi.InvokeOption) ListWorkplaceRolesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListWorkplaceRolesResultOutput, error) {
			args := v.(ListWorkplaceRolesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListWorkplaceRolesResult
			secret, err := ctx.InvokePackageRaw("doppler-native:workplace/v3:listWorkplaceRoles", args, &rv, "", opts...)
			if err != nil {
				return ListWorkplaceRolesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListWorkplaceRolesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListWorkplaceRolesResultOutput), nil
			}
			return output, nil
		}).(ListWorkplaceRolesResultOutput)
}

type ListWorkplaceRolesOutputArgs struct {
}

func (ListWorkplaceRolesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListWorkplaceRolesArgs)(nil)).Elem()
}

type ListWorkplaceRolesResultOutput struct{ *pulumi.OutputState }

func (ListWorkplaceRolesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListWorkplaceRolesResult)(nil)).Elem()
}

func (o ListWorkplaceRolesResultOutput) ToListWorkplaceRolesResultOutput() ListWorkplaceRolesResultOutput {
	return o
}

func (o ListWorkplaceRolesResultOutput) ToListWorkplaceRolesResultOutputWithContext(ctx context.Context) ListWorkplaceRolesResultOutput {
	return o
}

func (o ListWorkplaceRolesResultOutput) Roles() ListWorkplaceRolesPropertiesRolesItemPropertiesArrayOutput {
	return o.ApplyT(func(v ListWorkplaceRolesResult) []ListWorkplaceRolesPropertiesRolesItemProperties { return v.Roles }).(ListWorkplaceRolesPropertiesRolesItemPropertiesArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListWorkplaceRolesResultOutput{})
}
