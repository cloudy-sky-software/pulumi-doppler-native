// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetMember(ctx *pulumi.Context, args *GetMemberArgs, opts ...pulumi.InvokeOption) (*GetMemberResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMemberResult
	err := ctx.Invoke("doppler-native:workplace/v3:getMember", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetMemberArgs struct {
	// The group's slug
	GroupSlug string `pulumi:"groupSlug"`
	// The member's slug
	MemberSlug string `pulumi:"memberSlug"`
	MemberType string `pulumi:"memberType"`
}

type GetMemberResult struct {
	Group *GetMemberPropertiesGroupProperties `pulumi:"group"`
}

func GetMemberOutput(ctx *pulumi.Context, args GetMemberOutputArgs, opts ...pulumi.InvokeOption) GetMemberResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMemberResultOutput, error) {
			args := v.(GetMemberArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("doppler-native:workplace/v3:getMember", args, GetMemberResultOutput{}, options).(GetMemberResultOutput), nil
		}).(GetMemberResultOutput)
}

type GetMemberOutputArgs struct {
	// The group's slug
	GroupSlug pulumi.StringInput `pulumi:"groupSlug"`
	// The member's slug
	MemberSlug pulumi.StringInput `pulumi:"memberSlug"`
	MemberType pulumi.StringInput `pulumi:"memberType"`
}

func (GetMemberOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMemberArgs)(nil)).Elem()
}

type GetMemberResultOutput struct{ *pulumi.OutputState }

func (GetMemberResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMemberResult)(nil)).Elem()
}

func (o GetMemberResultOutput) ToGetMemberResultOutput() GetMemberResultOutput {
	return o
}

func (o GetMemberResultOutput) ToGetMemberResultOutputWithContext(ctx context.Context) GetMemberResultOutput {
	return o
}

func (o GetMemberResultOutput) Group() GetMemberPropertiesGroupPropertiesPtrOutput {
	return o.ApplyT(func(v GetMemberResult) *GetMemberPropertiesGroupProperties { return v.Group }).(GetMemberPropertiesGroupPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMemberResultOutput{})
}
