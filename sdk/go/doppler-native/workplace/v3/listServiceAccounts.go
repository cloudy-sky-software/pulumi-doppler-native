// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListServiceAccounts(ctx *pulumi.Context, args *ListServiceAccountsArgs, opts ...pulumi.InvokeOption) (*ListServiceAccountsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListServiceAccountsResult
	err := ctx.Invoke("doppler-native:workplace/v3:listServiceAccounts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListServiceAccountsArgs struct {
}

type ListServiceAccountsResult struct {
	ServiceAccounts []ListServiceAccountsPropertiesServiceAccountsItemProperties `pulumi:"serviceAccounts"`
}

func ListServiceAccountsOutput(ctx *pulumi.Context, args ListServiceAccountsOutputArgs, opts ...pulumi.InvokeOption) ListServiceAccountsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListServiceAccountsResultOutput, error) {
			args := v.(ListServiceAccountsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListServiceAccountsResult
			secret, err := ctx.InvokePackageRaw("doppler-native:workplace/v3:listServiceAccounts", args, &rv, "", opts...)
			if err != nil {
				return ListServiceAccountsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListServiceAccountsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListServiceAccountsResultOutput), nil
			}
			return output, nil
		}).(ListServiceAccountsResultOutput)
}

type ListServiceAccountsOutputArgs struct {
}

func (ListServiceAccountsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListServiceAccountsArgs)(nil)).Elem()
}

type ListServiceAccountsResultOutput struct{ *pulumi.OutputState }

func (ListServiceAccountsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListServiceAccountsResult)(nil)).Elem()
}

func (o ListServiceAccountsResultOutput) ToListServiceAccountsResultOutput() ListServiceAccountsResultOutput {
	return o
}

func (o ListServiceAccountsResultOutput) ToListServiceAccountsResultOutputWithContext(ctx context.Context) ListServiceAccountsResultOutput {
	return o
}

func (o ListServiceAccountsResultOutput) ServiceAccounts() ListServiceAccountsPropertiesServiceAccountsItemPropertiesArrayOutput {
	return o.ApplyT(func(v ListServiceAccountsResult) []ListServiceAccountsPropertiesServiceAccountsItemProperties {
		return v.ServiceAccounts
	}).(ListServiceAccountsPropertiesServiceAccountsItemPropertiesArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListServiceAccountsResultOutput{})
}
