// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetAuditUser(ctx *pulumi.Context, args *GetAuditUserArgs, opts ...pulumi.InvokeOption) (*GetAuditUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAuditUserResult
	err := ctx.Invoke("doppler-native:workplace/v3:getAuditUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type GetAuditUserArgs struct {
	// The ID of the workplace user
	WorkplaceUserId string `pulumi:"workplaceUserId"`
}

type GetAuditUserResult struct {
	Success       *bool                                          `pulumi:"success"`
	WorkplaceUser *GetAuditUserPropertiesWorkplaceUserProperties `pulumi:"workplaceUser"`
}

// Defaults sets the appropriate defaults for GetAuditUserResult
func (val *GetAuditUserResult) Defaults() *GetAuditUserResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Success == nil {
		success_ := true
		tmp.Success = &success_
	}
	tmp.WorkplaceUser = tmp.WorkplaceUser.Defaults()

	return &tmp
}
func GetAuditUserOutput(ctx *pulumi.Context, args GetAuditUserOutputArgs, opts ...pulumi.InvokeOption) GetAuditUserResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAuditUserResultOutput, error) {
			args := v.(GetAuditUserArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("doppler-native:workplace/v3:getAuditUser", args, GetAuditUserResultOutput{}, options).(GetAuditUserResultOutput), nil
		}).(GetAuditUserResultOutput)
}

type GetAuditUserOutputArgs struct {
	// The ID of the workplace user
	WorkplaceUserId pulumi.StringInput `pulumi:"workplaceUserId"`
}

func (GetAuditUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuditUserArgs)(nil)).Elem()
}

type GetAuditUserResultOutput struct{ *pulumi.OutputState }

func (GetAuditUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuditUserResult)(nil)).Elem()
}

func (o GetAuditUserResultOutput) ToGetAuditUserResultOutput() GetAuditUserResultOutput {
	return o
}

func (o GetAuditUserResultOutput) ToGetAuditUserResultOutputWithContext(ctx context.Context) GetAuditUserResultOutput {
	return o
}

func (o GetAuditUserResultOutput) Success() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAuditUserResult) *bool { return v.Success }).(pulumi.BoolPtrOutput)
}

func (o GetAuditUserResultOutput) WorkplaceUser() GetAuditUserPropertiesWorkplaceUserPropertiesPtrOutput {
	return o.ApplyT(func(v GetAuditUserResult) *GetAuditUserPropertiesWorkplaceUserProperties { return v.WorkplaceUser }).(GetAuditUserPropertiesWorkplaceUserPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAuditUserResultOutput{})
}
