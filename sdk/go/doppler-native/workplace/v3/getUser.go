// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetUser(ctx *pulumi.Context, args *GetUserArgs, opts ...pulumi.InvokeOption) (*GetUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUserResult
	err := ctx.Invoke("doppler-native:workplace/v3:getUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type GetUserArgs struct {
	// The slug of the workplace user
	Slug string `pulumi:"slug"`
}

type GetUserResult struct {
	Success       *bool                                     `pulumi:"success"`
	WorkplaceUser *GetUserPropertiesWorkplaceUserProperties `pulumi:"workplaceUser"`
}

// Defaults sets the appropriate defaults for GetUserResult
func (val *GetUserResult) Defaults() *GetUserResult {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Success == nil {
		success_ := true
		tmp.Success = &success_
	}
	return &tmp
}

func GetUserOutput(ctx *pulumi.Context, args GetUserOutputArgs, opts ...pulumi.InvokeOption) GetUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUserResultOutput, error) {
			args := v.(GetUserArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetUserResult
			secret, err := ctx.InvokePackageRaw("doppler-native:workplace/v3:getUser", args, &rv, "", opts...)
			if err != nil {
				return GetUserResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetUserResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetUserResultOutput), nil
			}
			return output, nil
		}).(GetUserResultOutput)
}

type GetUserOutputArgs struct {
	// The slug of the workplace user
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (GetUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserArgs)(nil)).Elem()
}

type GetUserResultOutput struct{ *pulumi.OutputState }

func (GetUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserResult)(nil)).Elem()
}

func (o GetUserResultOutput) ToGetUserResultOutput() GetUserResultOutput {
	return o
}

func (o GetUserResultOutput) ToGetUserResultOutputWithContext(ctx context.Context) GetUserResultOutput {
	return o
}

func (o GetUserResultOutput) Success() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUserResult) *bool { return v.Success }).(pulumi.BoolPtrOutput)
}

func (o GetUserResultOutput) WorkplaceUser() GetUserPropertiesWorkplaceUserPropertiesPtrOutput {
	return o.ApplyT(func(v GetUserResult) *GetUserPropertiesWorkplaceUserProperties { return v.WorkplaceUser }).(GetUserPropertiesWorkplaceUserPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserResultOutput{})
}
