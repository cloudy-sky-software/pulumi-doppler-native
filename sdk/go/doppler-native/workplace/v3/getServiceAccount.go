// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupServiceAccount(ctx *pulumi.Context, args *LookupServiceAccountArgs, opts ...pulumi.InvokeOption) (*LookupServiceAccountResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceAccountResult
	err := ctx.Invoke("doppler-native:workplace/v3:getServiceAccount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupServiceAccountArgs struct {
	// Slug of the service account
	Slug string `pulumi:"slug"`
}

type LookupServiceAccountResult struct {
	ServiceAccount *GetServiceAccountPropertiesServiceAccountProperties `pulumi:"serviceAccount"`
}

// Defaults sets the appropriate defaults for LookupServiceAccountResult
func (val *LookupServiceAccountResult) Defaults() *LookupServiceAccountResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ServiceAccount = tmp.ServiceAccount.Defaults()

	return &tmp
}

func LookupServiceAccountOutput(ctx *pulumi.Context, args LookupServiceAccountOutputArgs, opts ...pulumi.InvokeOption) LookupServiceAccountResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceAccountResultOutput, error) {
			args := v.(LookupServiceAccountArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupServiceAccountResult
			secret, err := ctx.InvokePackageRaw("doppler-native:workplace/v3:getServiceAccount", args, &rv, "", opts...)
			if err != nil {
				return LookupServiceAccountResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupServiceAccountResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupServiceAccountResultOutput), nil
			}
			return output, nil
		}).(LookupServiceAccountResultOutput)
}

type LookupServiceAccountOutputArgs struct {
	// Slug of the service account
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (LookupServiceAccountOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceAccountArgs)(nil)).Elem()
}

type LookupServiceAccountResultOutput struct{ *pulumi.OutputState }

func (LookupServiceAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceAccountResult)(nil)).Elem()
}

func (o LookupServiceAccountResultOutput) ToLookupServiceAccountResultOutput() LookupServiceAccountResultOutput {
	return o
}

func (o LookupServiceAccountResultOutput) ToLookupServiceAccountResultOutputWithContext(ctx context.Context) LookupServiceAccountResultOutput {
	return o
}

func (o LookupServiceAccountResultOutput) ServiceAccount() GetServiceAccountPropertiesServiceAccountPropertiesPtrOutput {
	return o.ApplyT(func(v LookupServiceAccountResult) *GetServiceAccountPropertiesServiceAccountProperties {
		return v.ServiceAccount
	}).(GetServiceAccountPropertiesServiceAccountPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceAccountResultOutput{})
}
