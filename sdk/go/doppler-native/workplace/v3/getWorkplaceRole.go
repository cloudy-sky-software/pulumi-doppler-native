// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupWorkplaceRole(ctx *pulumi.Context, args *LookupWorkplaceRoleArgs, opts ...pulumi.InvokeOption) (*LookupWorkplaceRoleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkplaceRoleResult
	err := ctx.Invoke("doppler-native:workplace/v3:getWorkplaceRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupWorkplaceRoleArgs struct {
	// The role's unique identifier
	Role string `pulumi:"role"`
}

type LookupWorkplaceRoleResult struct {
	Role *GetWorkplaceRolePropertiesRoleProperties `pulumi:"role"`
}

// Defaults sets the appropriate defaults for LookupWorkplaceRoleResult
func (val *LookupWorkplaceRoleResult) Defaults() *LookupWorkplaceRoleResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Role = tmp.Role.Defaults()

	return &tmp
}

func LookupWorkplaceRoleOutput(ctx *pulumi.Context, args LookupWorkplaceRoleOutputArgs, opts ...pulumi.InvokeOption) LookupWorkplaceRoleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkplaceRoleResultOutput, error) {
			args := v.(LookupWorkplaceRoleArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupWorkplaceRoleResult
			secret, err := ctx.InvokePackageRaw("doppler-native:workplace/v3:getWorkplaceRole", args, &rv, "", opts...)
			if err != nil {
				return LookupWorkplaceRoleResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupWorkplaceRoleResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupWorkplaceRoleResultOutput), nil
			}
			return output, nil
		}).(LookupWorkplaceRoleResultOutput)
}

type LookupWorkplaceRoleOutputArgs struct {
	// The role's unique identifier
	Role pulumi.StringInput `pulumi:"role"`
}

func (LookupWorkplaceRoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkplaceRoleArgs)(nil)).Elem()
}

type LookupWorkplaceRoleResultOutput struct{ *pulumi.OutputState }

func (LookupWorkplaceRoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkplaceRoleResult)(nil)).Elem()
}

func (o LookupWorkplaceRoleResultOutput) ToLookupWorkplaceRoleResultOutput() LookupWorkplaceRoleResultOutput {
	return o
}

func (o LookupWorkplaceRoleResultOutput) ToLookupWorkplaceRoleResultOutputWithContext(ctx context.Context) LookupWorkplaceRoleResultOutput {
	return o
}

func (o LookupWorkplaceRoleResultOutput) Role() GetWorkplaceRolePropertiesRolePropertiesPtrOutput {
	return o.ApplyT(func(v LookupWorkplaceRoleResult) *GetWorkplaceRolePropertiesRoleProperties { return v.Role }).(GetWorkplaceRolePropertiesRolePropertiesPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkplaceRoleResultOutput{})
}
