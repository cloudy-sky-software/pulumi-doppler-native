// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListServiceTokens(ctx *pulumi.Context, args *ListServiceTokensArgs, opts ...pulumi.InvokeOption) (*ListServiceTokensResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListServiceTokensResult
	err := ctx.Invoke("doppler-native:configs/v3:listServiceTokens", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListServiceTokensArgs struct {
}

type ListServiceTokensResult struct {
	Tokens []ListServiceTokensPropertiesTokensItemProperties `pulumi:"tokens"`
}

func ListServiceTokensOutput(ctx *pulumi.Context, args ListServiceTokensOutputArgs, opts ...pulumi.InvokeOption) ListServiceTokensResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListServiceTokensResultOutput, error) {
			args := v.(ListServiceTokensArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("doppler-native:configs/v3:listServiceTokens", args, ListServiceTokensResultOutput{}, options).(ListServiceTokensResultOutput), nil
		}).(ListServiceTokensResultOutput)
}

type ListServiceTokensOutputArgs struct {
}

func (ListServiceTokensOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListServiceTokensArgs)(nil)).Elem()
}

type ListServiceTokensResultOutput struct{ *pulumi.OutputState }

func (ListServiceTokensResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListServiceTokensResult)(nil)).Elem()
}

func (o ListServiceTokensResultOutput) ToListServiceTokensResultOutput() ListServiceTokensResultOutput {
	return o
}

func (o ListServiceTokensResultOutput) ToListServiceTokensResultOutputWithContext(ctx context.Context) ListServiceTokensResultOutput {
	return o
}

func (o ListServiceTokensResultOutput) Tokens() ListServiceTokensPropertiesTokensItemPropertiesArrayOutput {
	return o.ApplyT(func(v ListServiceTokensResult) []ListServiceTokensPropertiesTokensItemProperties { return v.Tokens }).(ListServiceTokensPropertiesTokensItemPropertiesArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListServiceTokensResultOutput{})
}
