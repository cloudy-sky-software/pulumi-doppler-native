// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetSecretsName(ctx *pulumi.Context, args *GetSecretsNameArgs, opts ...pulumi.InvokeOption) (*GetSecretsNameResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecretsNameResult
	err := ctx.Invoke("doppler-native:configs/v3:getSecretsName", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetSecretsNameArgs struct {
}

type GetSecretsNameResult struct {
	Names []string `pulumi:"names"`
}

func GetSecretsNameOutput(ctx *pulumi.Context, args GetSecretsNameOutputArgs, opts ...pulumi.InvokeOption) GetSecretsNameResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSecretsNameResultOutput, error) {
			args := v.(GetSecretsNameArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("doppler-native:configs/v3:getSecretsName", args, GetSecretsNameResultOutput{}, options).(GetSecretsNameResultOutput), nil
		}).(GetSecretsNameResultOutput)
}

type GetSecretsNameOutputArgs struct {
}

func (GetSecretsNameOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsNameArgs)(nil)).Elem()
}

type GetSecretsNameResultOutput struct{ *pulumi.OutputState }

func (GetSecretsNameResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretsNameResult)(nil)).Elem()
}

func (o GetSecretsNameResultOutput) ToGetSecretsNameResultOutput() GetSecretsNameResultOutput {
	return o
}

func (o GetSecretsNameResultOutput) ToGetSecretsNameResultOutputWithContext(ctx context.Context) GetSecretsNameResultOutput {
	return o
}

func (o GetSecretsNameResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecretsNameResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecretsNameResultOutput{})
}
