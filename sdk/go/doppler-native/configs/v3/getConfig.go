// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v3

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-doppler-native/sdk/go/doppler-native/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupConfig(ctx *pulumi.Context, args *LookupConfigArgs, opts ...pulumi.InvokeOption) (*LookupConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConfigResult
	err := ctx.Invoke("doppler-native:configs/v3:getConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupConfigArgs struct {
}

type LookupConfigResult struct {
	Config *GetConfigPropertiesConfigProperties `pulumi:"config"`
}

// Defaults sets the appropriate defaults for LookupConfigResult
func (val *LookupConfigResult) Defaults() *LookupConfigResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Config = tmp.Config.Defaults()

	return &tmp
}
func LookupConfigOutput(ctx *pulumi.Context, args LookupConfigOutputArgs, opts ...pulumi.InvokeOption) LookupConfigResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupConfigResultOutput, error) {
			args := v.(LookupConfigArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("doppler-native:configs/v3:getConfig", args, LookupConfigResultOutput{}, options).(LookupConfigResultOutput), nil
		}).(LookupConfigResultOutput)
}

type LookupConfigOutputArgs struct {
}

func (LookupConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigArgs)(nil)).Elem()
}

type LookupConfigResultOutput struct{ *pulumi.OutputState }

func (LookupConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigResult)(nil)).Elem()
}

func (o LookupConfigResultOutput) ToLookupConfigResultOutput() LookupConfigResultOutput {
	return o
}

func (o LookupConfigResultOutput) ToLookupConfigResultOutputWithContext(ctx context.Context) LookupConfigResultOutput {
	return o
}

func (o LookupConfigResultOutput) Config() GetConfigPropertiesConfigPropertiesPtrOutput {
	return o.ApplyT(func(v LookupConfigResult) *GetConfigPropertiesConfigProperties { return v.Config }).(GetConfigPropertiesConfigPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigResultOutput{})
}
