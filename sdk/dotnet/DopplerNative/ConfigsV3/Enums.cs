// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace CloudySkySoftware.Pulumi.DopplerNative.ConfigsV3
{
    /// <summary>
    /// Token's capabilities.
    /// </summary>
    [EnumType]
    public readonly struct Access : IEquatable<Access>
    {
        private readonly string _value;

        private Access(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static Access Read { get; } = new Access("read");
        public static Access Readwrite { get; } = new Access("read/write");

        public static bool operator ==(Access left, Access right) => left.Equals(right);
        public static bool operator !=(Access left, Access right) => !left.Equals(right);

        public static explicit operator string(Access value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is Access other && Equals(other);
        public bool Equals(Access other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct ChangeRequestsItemPropertiesOriginalValueTypePropertiesType : IEquatable<ChangeRequestsItemPropertiesOriginalValueTypePropertiesType>
    {
        private readonly string _value;

        private ChangeRequestsItemPropertiesOriginalValueTypePropertiesType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ChangeRequestsItemPropertiesOriginalValueTypePropertiesType String { get; } = new ChangeRequestsItemPropertiesOriginalValueTypePropertiesType("string");
        public static ChangeRequestsItemPropertiesOriginalValueTypePropertiesType Json { get; } = new ChangeRequestsItemPropertiesOriginalValueTypePropertiesType("json");
        public static ChangeRequestsItemPropertiesOriginalValueTypePropertiesType Json5 { get; } = new ChangeRequestsItemPropertiesOriginalValueTypePropertiesType("json5");
        public static ChangeRequestsItemPropertiesOriginalValueTypePropertiesType Boolean { get; } = new ChangeRequestsItemPropertiesOriginalValueTypePropertiesType("boolean");
        public static ChangeRequestsItemPropertiesOriginalValueTypePropertiesType Integer { get; } = new ChangeRequestsItemPropertiesOriginalValueTypePropertiesType("integer");
        public static ChangeRequestsItemPropertiesOriginalValueTypePropertiesType Decimal { get; } = new ChangeRequestsItemPropertiesOriginalValueTypePropertiesType("decimal");
        public static ChangeRequestsItemPropertiesOriginalValueTypePropertiesType Email { get; } = new ChangeRequestsItemPropertiesOriginalValueTypePropertiesType("email");
        public static ChangeRequestsItemPropertiesOriginalValueTypePropertiesType Url { get; } = new ChangeRequestsItemPropertiesOriginalValueTypePropertiesType("url");
        public static ChangeRequestsItemPropertiesOriginalValueTypePropertiesType Uuidv4 { get; } = new ChangeRequestsItemPropertiesOriginalValueTypePropertiesType("uuidv4");
        public static ChangeRequestsItemPropertiesOriginalValueTypePropertiesType Cuid2 { get; } = new ChangeRequestsItemPropertiesOriginalValueTypePropertiesType("cuid2");
        public static ChangeRequestsItemPropertiesOriginalValueTypePropertiesType Ulid { get; } = new ChangeRequestsItemPropertiesOriginalValueTypePropertiesType("ulid");
        public static ChangeRequestsItemPropertiesOriginalValueTypePropertiesType Datetime8601 { get; } = new ChangeRequestsItemPropertiesOriginalValueTypePropertiesType("datetime8601");
        public static ChangeRequestsItemPropertiesOriginalValueTypePropertiesType Date8601 { get; } = new ChangeRequestsItemPropertiesOriginalValueTypePropertiesType("date8601");
        public static ChangeRequestsItemPropertiesOriginalValueTypePropertiesType Yaml { get; } = new ChangeRequestsItemPropertiesOriginalValueTypePropertiesType("yaml");

        public static bool operator ==(ChangeRequestsItemPropertiesOriginalValueTypePropertiesType left, ChangeRequestsItemPropertiesOriginalValueTypePropertiesType right) => left.Equals(right);
        public static bool operator !=(ChangeRequestsItemPropertiesOriginalValueTypePropertiesType left, ChangeRequestsItemPropertiesOriginalValueTypePropertiesType right) => !left.Equals(right);

        public static explicit operator string(ChangeRequestsItemPropertiesOriginalValueTypePropertiesType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ChangeRequestsItemPropertiesOriginalValueTypePropertiesType other && Equals(other);
        public bool Equals(ChangeRequestsItemPropertiesOriginalValueTypePropertiesType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct ChangeRequestsItemPropertiesValueTypePropertiesType : IEquatable<ChangeRequestsItemPropertiesValueTypePropertiesType>
    {
        private readonly string _value;

        private ChangeRequestsItemPropertiesValueTypePropertiesType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ChangeRequestsItemPropertiesValueTypePropertiesType String { get; } = new ChangeRequestsItemPropertiesValueTypePropertiesType("string");
        public static ChangeRequestsItemPropertiesValueTypePropertiesType Json { get; } = new ChangeRequestsItemPropertiesValueTypePropertiesType("json");
        public static ChangeRequestsItemPropertiesValueTypePropertiesType Json5 { get; } = new ChangeRequestsItemPropertiesValueTypePropertiesType("json5");
        public static ChangeRequestsItemPropertiesValueTypePropertiesType Boolean { get; } = new ChangeRequestsItemPropertiesValueTypePropertiesType("boolean");
        public static ChangeRequestsItemPropertiesValueTypePropertiesType Integer { get; } = new ChangeRequestsItemPropertiesValueTypePropertiesType("integer");
        public static ChangeRequestsItemPropertiesValueTypePropertiesType Decimal { get; } = new ChangeRequestsItemPropertiesValueTypePropertiesType("decimal");
        public static ChangeRequestsItemPropertiesValueTypePropertiesType Email { get; } = new ChangeRequestsItemPropertiesValueTypePropertiesType("email");
        public static ChangeRequestsItemPropertiesValueTypePropertiesType Url { get; } = new ChangeRequestsItemPropertiesValueTypePropertiesType("url");
        public static ChangeRequestsItemPropertiesValueTypePropertiesType Uuidv4 { get; } = new ChangeRequestsItemPropertiesValueTypePropertiesType("uuidv4");
        public static ChangeRequestsItemPropertiesValueTypePropertiesType Cuid2 { get; } = new ChangeRequestsItemPropertiesValueTypePropertiesType("cuid2");
        public static ChangeRequestsItemPropertiesValueTypePropertiesType Ulid { get; } = new ChangeRequestsItemPropertiesValueTypePropertiesType("ulid");
        public static ChangeRequestsItemPropertiesValueTypePropertiesType Datetime8601 { get; } = new ChangeRequestsItemPropertiesValueTypePropertiesType("datetime8601");
        public static ChangeRequestsItemPropertiesValueTypePropertiesType Date8601 { get; } = new ChangeRequestsItemPropertiesValueTypePropertiesType("date8601");
        public static ChangeRequestsItemPropertiesValueTypePropertiesType Yaml { get; } = new ChangeRequestsItemPropertiesValueTypePropertiesType("yaml");

        public static bool operator ==(ChangeRequestsItemPropertiesValueTypePropertiesType left, ChangeRequestsItemPropertiesValueTypePropertiesType right) => left.Equals(right);
        public static bool operator !=(ChangeRequestsItemPropertiesValueTypePropertiesType left, ChangeRequestsItemPropertiesValueTypePropertiesType right) => !left.Equals(right);

        public static explicit operator string(ChangeRequestsItemPropertiesValueTypePropertiesType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ChangeRequestsItemPropertiesValueTypePropertiesType other && Equals(other);
        public bool Equals(ChangeRequestsItemPropertiesValueTypePropertiesType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>
    /// An option indicating if and how Doppler should attempt to import secrets from the sync destination
    /// </summary>
    [EnumType]
    public readonly struct ImportOption : IEquatable<ImportOption>
    {
        private readonly string _value;

        private ImportOption(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ImportOption None { get; } = new ImportOption("none");
        public static ImportOption PreferDoppler { get; } = new ImportOption("prefer_doppler");
        public static ImportOption PreferIntegration { get; } = new ImportOption("prefer_integration");

        public static bool operator ==(ImportOption left, ImportOption right) => left.Equals(right);
        public static bool operator !=(ImportOption left, ImportOption right) => !left.Equals(right);

        public static explicit operator string(ImportOption value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ImportOption other && Equals(other);
        public bool Equals(ImportOption other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
