// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.DopplerNative.WorkplaceV3
{
    public static class GetAuditUser
    {
        public static Task<Outputs.GetAuditUserProperties> InvokeAsync(GetAuditUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Outputs.GetAuditUserProperties>("doppler-native:workplace/v3:getAuditUser", args ?? new GetAuditUserArgs(), options.WithDefaults());

        public static Output<Outputs.GetAuditUserProperties> Invoke(GetAuditUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.GetAuditUserProperties>("doppler-native:workplace/v3:getAuditUser", args ?? new GetAuditUserInvokeArgs(), options.WithDefaults());

        public static Output<Outputs.GetAuditUserProperties> Invoke(GetAuditUserInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.GetAuditUserProperties>("doppler-native:workplace/v3:getAuditUser", args ?? new GetAuditUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuditUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the workplace user
        /// </summary>
        [Input("workplaceUserId", required: true)]
        public string WorkplaceUserId { get; set; } = null!;

        public GetAuditUserArgs()
        {
        }
        public static new GetAuditUserArgs Empty => new GetAuditUserArgs();
    }

    public sealed class GetAuditUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the workplace user
        /// </summary>
        [Input("workplaceUserId", required: true)]
        public Input<string> WorkplaceUserId { get; set; } = null!;

        public GetAuditUserInvokeArgs()
        {
        }
        public static new GetAuditUserInvokeArgs Empty => new GetAuditUserInvokeArgs();
    }
}
