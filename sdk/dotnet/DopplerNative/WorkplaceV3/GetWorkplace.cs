// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.DopplerNative.WorkplaceV3
{
    public static class GetWorkplace
    {
        public static Task<Outputs.GetWorkplaceProperties> InvokeAsync(GetWorkplaceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Outputs.GetWorkplaceProperties>("doppler-native:workplace/v3:getWorkplace", args ?? new GetWorkplaceArgs(), options.WithDefaults());

        public static Output<Outputs.GetWorkplaceProperties> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.GetWorkplaceProperties>("doppler-native:workplace/v3:getWorkplace", InvokeArgs.Empty, options.WithDefaults());

        public static Output<Outputs.GetWorkplaceProperties> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.GetWorkplaceProperties>("doppler-native:workplace/v3:getWorkplace", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class GetWorkplaceArgs : global::Pulumi.InvokeArgs
    {
        public GetWorkplaceArgs()
        {
        }
        public static new GetWorkplaceArgs Empty => new GetWorkplaceArgs();
    }
}
