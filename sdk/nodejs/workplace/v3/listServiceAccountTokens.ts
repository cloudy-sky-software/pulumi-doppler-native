// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export function listServiceAccountTokens(args: ListServiceAccountTokensArgs, opts?: pulumi.InvokeOptions): Promise<outputs.workplace.v3.ListServiceAccountTokensProperties> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("doppler-native:workplace/v3:listServiceAccountTokens", {
        "serviceAccount": args.serviceAccount,
    }, opts);
}

export interface ListServiceAccountTokensArgs {
    /**
     * Slug of the service account
     */
    serviceAccount: string;
}
export function listServiceAccountTokensOutput(args: ListServiceAccountTokensOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<outputs.workplace.v3.ListServiceAccountTokensProperties> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("doppler-native:workplace/v3:listServiceAccountTokens", {
        "serviceAccount": args.serviceAccount,
    }, opts);
}

export interface ListServiceAccountTokensOutputArgs {
    /**
     * Slug of the service account
     */
    serviceAccount: pulumi.Input<string>;
}
