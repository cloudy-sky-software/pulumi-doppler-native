// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export function getMember(args: GetMemberArgs, opts?: pulumi.InvokeOptions): Promise<outputs.workplace.v3.GetMemberProperties> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("doppler-native:workplace/v3:getMember", {
        "groupSlug": args.groupSlug,
        "memberSlug": args.memberSlug,
        "memberType": args.memberType,
    }, opts);
}

export interface GetMemberArgs {
    /**
     * The group's slug
     */
    groupSlug: string;
    /**
     * The member's slug
     */
    memberSlug: string;
    memberType: string;
}
export function getMemberOutput(args: GetMemberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<outputs.workplace.v3.GetMemberProperties> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("doppler-native:workplace/v3:getMember", {
        "groupSlug": args.groupSlug,
        "memberSlug": args.memberSlug,
        "memberType": args.memberType,
    }, opts);
}

export interface GetMemberOutputArgs {
    /**
     * The group's slug
     */
    groupSlug: pulumi.Input<string>;
    /**
     * The member's slug
     */
    memberSlug: pulumi.Input<string>;
    memberType: pulumi.Input<string>;
}
