{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "config/index.ts",
        "config/vars.ts",
        "configs/index.ts",
        "configs/v3/config.ts",
        "configs/v3/configLogsRollback.ts",
        "configs/v3/configsClone.ts",
        "configs/v3/configsLock.ts",
        "configs/v3/configsTrustedIp.ts",
        "configs/v3/configsUnlock.ts",
        "configs/v3/configsUpdate.ts",
        "configs/v3/dynamicSecretsIssueLease.ts",
        "configs/v3/getConfig.ts",
        "configs/v3/getConfigLog.ts",
        "configs/v3/getSecret.ts",
        "configs/v3/getSecretsDownload.ts",
        "configs/v3/getSecretsName.ts",
        "configs/v3/getSync.ts",
        "configs/v3/index.ts",
        "configs/v3/listConfigLogs.ts",
        "configs/v3/listConfigs.ts",
        "configs/v3/listConfigsTrustedIps.ts",
        "configs/v3/listSecrets.ts",
        "configs/v3/listServiceTokens.ts",
        "configs/v3/secretsUpdate.ts",
        "configs/v3/secretsUpdateNote.ts",
        "configs/v3/serviceToken.ts",
        "configs/v3/sync.ts",
        "environments/index.ts",
        "environments/v3/environment.ts",
        "environments/v3/environmentsRename.ts",
        "environments/v3/getEnvironment.ts",
        "environments/v3/index.ts",
        "environments/v3/listEnvironments.ts",
        "index.ts",
        "integrations/index.ts",
        "integrations/v3/getIntegration.ts",
        "integrations/v3/index.ts",
        "integrations/v3/integration.ts",
        "integrations/v3/listIntegrations.ts",
        "me/index.ts",
        "me/v3/getAuthMe.ts",
        "me/v3/index.ts",
        "projects/index.ts",
        "projects/v3/getProject.ts",
        "projects/v3/getProjectMember.ts",
        "projects/v3/getProjectRole.ts",
        "projects/v3/index.ts",
        "projects/v3/listProjectMembers.ts",
        "projects/v3/listProjectRoles.ts",
        "projects/v3/listProjectRolesPermissions.ts",
        "projects/v3/listProjects.ts",
        "projects/v3/project.ts",
        "projects/v3/projectMember.ts",
        "projects/v3/projectRole.ts",
        "projects/v3/projectsUpdate.ts",
        "provider.ts",
        "types/enums/configs/index.ts",
        "types/enums/configs/v3/index.ts",
        "types/enums/index.ts",
        "types/enums/projects/index.ts",
        "types/enums/projects/v3/index.ts",
        "types/enums/workplace/index.ts",
        "types/enums/workplace/v3/index.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts",
        "webhooks/index.ts",
        "webhooks/v3/index.ts",
        "webhooks/v3/webhooksDisable.ts",
        "webhooks/v3/webhooksEnable.ts",
        "workplace/index.ts",
        "workplace/v3/getAuditUser.ts",
        "workplace/v3/getGroup.ts",
        "workplace/v3/getMember.ts",
        "workplace/v3/getServiceAccount.ts",
        "workplace/v3/getServiceAccountToken.ts",
        "workplace/v3/getUser.ts",
        "workplace/v3/getWorkplace.ts",
        "workplace/v3/getWorkplaceRole.ts",
        "workplace/v3/group.ts",
        "workplace/v3/groupsMember.ts",
        "workplace/v3/index.ts",
        "workplace/v3/listGroups.ts",
        "workplace/v3/listInvites.ts",
        "workplace/v3/listServiceAccountTokens.ts",
        "workplace/v3/listServiceAccounts.ts",
        "workplace/v3/listUsers.ts",
        "workplace/v3/listWorkplaceRoles.ts",
        "workplace/v3/listWorkplaceRolesPermissions.ts",
        "workplace/v3/serviceAccount.ts",
        "workplace/v3/serviceAccountToken.ts",
        "workplace/v3/workplaceRole.ts",
        "workplace/v3/workplaceUpdate.ts"
    ]
}
