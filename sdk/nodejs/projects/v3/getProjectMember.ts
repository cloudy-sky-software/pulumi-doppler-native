// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export function getProjectMember(args: GetProjectMemberArgs, opts?: pulumi.InvokeOptions): Promise<outputs.projects.v3.GetProjectMemberProperties> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("doppler-native:projects/v3:getProjectMember", {
        "slug": args.slug,
        "type": args.type,
    }, opts);
}

export interface GetProjectMemberArgs {
    /**
     * Member's slug
     */
    slug: string;
    type: string;
}
export function getProjectMemberOutput(args: GetProjectMemberOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<outputs.projects.v3.GetProjectMemberProperties> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("doppler-native:projects/v3:getProjectMember", {
        "slug": args.slug,
        "type": args.type,
    }, opts);
}

export interface GetProjectMemberOutputArgs {
    /**
     * Member's slug
     */
    slug: pulumi.Input<string>;
    type: pulumi.Input<string>;
}
